[{"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\index.js":"1","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\App.js":"2","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\store.js":"4","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\Login.js":"5","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\Signup.js":"6","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\ResetPassword.js":"7","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\ResetPasswordConfirm.js":"8","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\Activate.js":"9","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\Home.jsx":"10","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\Dashboard.jsx":"11","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\errors\\Error404.jsx":"12","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\hocs\\Layout.js":"13","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\auth.js":"14","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\reviews.js":"15","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\alert.js":"16","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\helpers\\fixedPrices.js":"17","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\profile.js":"18","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\helpers\\fixedCountries.js":"19","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\home\\ProductsSold.js":"20","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\home\\Banner.js":"21","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\home\\ProductsArrival.js":"22","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\dashboard\\DashboardLink.js":"23","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\navigation\\Footer.js":"24","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\navigation\\Navbar.js":"25","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\index.js":"26","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\types.js":"27","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\alert.js":"28","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\navigation\\SearchBox.js":"29","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\alert.js":"30","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\auth.js":"31","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\profile.js":"32","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\reviews.js":"33","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\Shop.jsx":"34","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\productDetail.jsx":"35","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\Cart.jsx":"36","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\Search.jsx":"37","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\Checkout.jsx":"38","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\ThankYou.jsx":"39","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\DashboardPaymentDetail.jsx":"40","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\DashboardProfile.jsx":"41","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\DashboardPayments.jsx":"42","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\products.js":"43","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\categories.js":"44","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\wishlist.js":"45","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\cart.js":"46","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\product\\ProductCard.js":"47","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\product\\ImageGallery.js":"48","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\product\\WishlistHeart.js":"49","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\cart\\WishlistItem.js":"50","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\cart\\CartItem.js":"51","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\product\\Stars.js":"52","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\orders.js":"53","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\payment.js":"54","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\coupons.js":"55","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\shipping.js":"56","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\checkout\\ShippingForm.js":"57","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\products.js":"58","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\shipping.js":"59","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\cart.js":"60","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\orders.js":"61","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\categories.js":"62","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\coupons.js":"63","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\wishlist.js":"64","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\payment.js":"65"},{"size":544,"mtime":1639002703000,"results":"66","hashOfConfig":"67"},{"size":2531,"mtime":1639002703000,"results":"68","hashOfConfig":"67"},{"size":5064,"mtime":1639002703000,"results":"69","hashOfConfig":"67"},{"size":391,"mtime":1639002703000,"results":"70","hashOfConfig":"67"},{"size":5059,"mtime":1639002703000,"results":"71","hashOfConfig":"67"},{"size":5620,"mtime":1639002703000,"results":"72","hashOfConfig":"67"},{"size":3390,"mtime":1639002703000,"results":"73","hashOfConfig":"67"},{"size":4451,"mtime":1639002703000,"results":"74","hashOfConfig":"67"},{"size":1936,"mtime":1639002703000,"results":"75","hashOfConfig":"67"},{"size":1145,"mtime":1639002703000,"results":"76","hashOfConfig":"67"},{"size":12021,"mtime":1639002703000,"results":"77","hashOfConfig":"67"},{"size":166,"mtime":1639002703000,"results":"78","hashOfConfig":"67"},{"size":1122,"mtime":1639002703000,"results":"79","hashOfConfig":"67"},{"size":9986,"mtime":1639002703000,"results":"80","hashOfConfig":"67"},{"size":6441,"mtime":1639002703000,"results":"81","hashOfConfig":"67"},{"size":287,"mtime":1639002703000,"results":"82","hashOfConfig":"67"},{"size":336,"mtime":1639002703000,"results":"83","hashOfConfig":"67"},{"size":2524,"mtime":1639002703000,"results":"84","hashOfConfig":"67"},{"size":10344,"mtime":1639002703000,"results":"85","hashOfConfig":"67"},{"size":2255,"mtime":1639002703000,"results":"86","hashOfConfig":"67"},{"size":4935,"mtime":1639002703000,"results":"87","hashOfConfig":"67"},{"size":1659,"mtime":1639002703000,"results":"88","hashOfConfig":"67"},{"size":2082,"mtime":1639002703000,"results":"89","hashOfConfig":"67"},{"size":11515,"mtime":1639002703000,"results":"90","hashOfConfig":"67"},{"size":14807,"mtime":1639002703000,"results":"91","hashOfConfig":"67"},{"size":619,"mtime":1639002703000,"results":"92","hashOfConfig":"67"},{"size":6079,"mtime":1639002703000,"results":"93","hashOfConfig":"67"},{"size":1084,"mtime":1639002703000,"results":"94","hashOfConfig":"67"},{"size":2374,"mtime":1639002703000,"results":"95","hashOfConfig":"67"},{"size":516,"mtime":1639002703000,"results":"96","hashOfConfig":"67"},{"size":2994,"mtime":1639002703000,"results":"97","hashOfConfig":"67"},{"size":852,"mtime":1639002703000,"results":"98","hashOfConfig":"67"},{"size":2142,"mtime":1639002703000,"results":"99","hashOfConfig":"67"},{"size":28968,"mtime":1639002703000,"results":"100","hashOfConfig":"67"},{"size":17342,"mtime":1639002703000,"results":"101","hashOfConfig":"67"},{"size":8392,"mtime":1639002703000,"results":"102","hashOfConfig":"67"},{"size":29393,"mtime":1639002703000,"results":"103","hashOfConfig":"67"},{"size":10599,"mtime":1639002703000,"results":"104","hashOfConfig":"67"},{"size":1139,"mtime":1639002703000,"results":"105","hashOfConfig":"67"},{"size":15653,"mtime":1639002703000,"results":"106","hashOfConfig":"67"},{"size":19432,"mtime":1639002703000,"results":"107","hashOfConfig":"67"},{"size":16131,"mtime":1639002703000,"results":"108","hashOfConfig":"67"},{"size":5444,"mtime":1639002703000,"results":"109","hashOfConfig":"67"},{"size":740,"mtime":1639002703000,"results":"110","hashOfConfig":"67"},{"size":4190,"mtime":1639002703000,"results":"111","hashOfConfig":"67"},{"size":10394,"mtime":1639002703000,"results":"112","hashOfConfig":"67"},{"size":1078,"mtime":1639002703000,"results":"113","hashOfConfig":"67"},{"size":3396,"mtime":1639002703000,"results":"114","hashOfConfig":"67"},{"size":2220,"mtime":1639002703000,"results":"115","hashOfConfig":"67"},{"size":5020,"mtime":1639002703000,"results":"116","hashOfConfig":"67"},{"size":4983,"mtime":1639002703000,"results":"117","hashOfConfig":"67"},{"size":4926,"mtime":1639002703000,"results":"118","hashOfConfig":"67"},{"size":1850,"mtime":1639002703000,"results":"119","hashOfConfig":"67"},{"size":3535,"mtime":1639002703000,"results":"120","hashOfConfig":"67"},{"size":1209,"mtime":1639002703000,"results":"121","hashOfConfig":"67"},{"size":782,"mtime":1639002703000,"results":"122","hashOfConfig":"67"},{"size":15101,"mtime":1639002703000,"results":"123","hashOfConfig":"67"},{"size":2803,"mtime":1639002703000,"results":"124","hashOfConfig":"67"},{"size":609,"mtime":1639002703000,"results":"125","hashOfConfig":"67"},{"size":4118,"mtime":1639002703000,"results":"126","hashOfConfig":"67"},{"size":882,"mtime":1639002703000,"results":"127","hashOfConfig":"67"},{"size":584,"mtime":1639002703000,"results":"128","hashOfConfig":"67"},{"size":552,"mtime":1639002703000,"results":"129","hashOfConfig":"67"},{"size":1679,"mtime":1639002703000,"results":"130","hashOfConfig":"67"},{"size":2411,"mtime":1639002703000,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"10gpvze",{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"134"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"134"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"134"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"134"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"134"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"134"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"134"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"134"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"134"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"134"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"134"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"134"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"134"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"134"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"134"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"134"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"134"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\index.js",[],["287","288"],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\App.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\store.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\Login.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\Signup.js",["289"],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\ResetPassword.js",["290"],"import Layout from '../../hocs/Layout'\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport { reset_password } from '../../redux/actions/auth'\nimport Loader from 'react-loader-spinner'\nimport { Navigate } from 'react-router'\nconst ResetPassword = ({\n  reset_password,\n  loading\n}) => {\n\n  useEffect(() => {\n    window.scrollTo(0,0)\n  }, [])\n\n  const [requestSent, setRequestSent] = useState(false);\n\n  const [formData, setFormData] = useState({\n    email: '',\n  })\n\n  const { \n    email,\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e =>{\n    e.preventDefault();\n    reset_password(email);\n    setRequestSent(true)\n  }\n\n  if (requestSent && !loading)\n        return <Navigate to='/' />;\n\n  return (\n    <Layout>\n      <div className=\"min-h-full flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <img\n            className=\"mx-auto h-12 w-auto\"\n            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n            alt=\"Workflow\"\n          />\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Recover you password</h2>\n          \n        </div>\n\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <form onSubmit={e=>onSubmit(e)} className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    name=\"email\"\n                    value={email}\n                    onChange={e=>onChange(e)}\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                {loading ? \n                <button\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <Loader\n                type=\"Oval\"\n                color=\"#fff\"\n                width={20}\n                height={20}\n                />\n              </button>:\n              <button\n              type=\"submit\"\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Send Email\n            </button>}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\nconst mapStateToProps = state => ({\n  loading: state.Auth.loading\n})\n\nexport default connect(mapStateToProps, {\n  reset_password\n}) (ResetPassword)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\ResetPasswordConfirm.js",["291"],"import Layout from '../../hocs/Layout'\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport { reset_password_confirm } from '../../redux/actions/auth'\nimport Loader from 'react-loader-spinner'\nimport {Navigate, useParams} from 'react-router'\nconst ResetPasswordConfirm = ({\n  reset_password_confirm,\n  loading\n}) => {\n  const params = useParams()\n\n  const [requestSent, setRequestSent] = useState(false);\n\n  useEffect(() => {\n    window.scrollTo(0,0)\n  }, [])\n\n  const [formData, setFormData] = useState({\n    new_password: '',\n    re_new_password: ''\n  })\n\n  const { \n    new_password,\n    re_new_password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e =>{\n    e.preventDefault();\n    const uid = params.uid\n    const token = params.token\n\n    reset_password_confirm(uid, token, new_password, re_new_password)\n    if (new_password === re_new_password)\n      setRequestSent(true);\n  }\n\n  if (requestSent && !loading)\n        return <Navigate to='/' />;\n\n  return (\n    <Layout>\n      <div className=\"min-h-full flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n          <img\n            className=\"mx-auto h-12 w-auto\"\n            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n            alt=\"Workflow\"\n          />\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Set your new password</h2>\n          \n        </div>\n\n        <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <form onSubmit={e=>onSubmit(e)} className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                  Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    name=\"new_password\"\n                    value={new_password}\n                    onChange={e=>onChange(e)}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                  Repeat Password\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    name=\"re_new_password\"\n                    value={re_new_password}\n                    onChange={e=>onChange(e)}\n                    type=\"password\"\n                    placeholder=\"Repeat Password\"\n                    required\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                {loading ? \n                <button\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <Loader\n                type=\"Oval\"\n                color=\"#fff\"\n                width={20}\n                height={20}\n                />\n              </button>:\n              <button\n              type=\"submit\"\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Reset password\n            </button>}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\nconst mapStateToProps = state => ({\n  loading: state.Auth.loading\n})\n\nexport default connect(mapStateToProps, {\n  reset_password_confirm\n}) (ResetPasswordConfirm)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\auth\\Activate.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\Home.jsx",["292"],"import Layout from \"../hocs/Layout\"\nimport { connect } from 'react-redux';\nimport { \n    get_products_by_arrival, \n    get_products_by_sold \n} from '../redux/actions/products';\nimport { useEffect } from \"react\";\nimport Banner from '../components/home/Banner'\nimport ProductsArrival from '../components/home/ProductsArrival'\nimport ProductsSold from '../components/home/ProductsSold'\nconst Home = ({\n    get_products_by_arrival, \n    get_products_by_sold,\n    products_arrival,\n    products_sold\n}) => {\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n\n        get_products_by_arrival();\n        get_products_by_sold();\n    }, []);\n\n    return(\n        <Layout>\n            <div className=\"text-blue-500\">\n                <Banner/>\n                <ProductsArrival data={products_arrival}/>\n                <ProductsSold data={products_sold}/>\n            </div>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => ({\n    products_arrival: state.Products.products_arrival,\n    products_sold: state.Products.products_sold,\n})\n\nexport default connect(mapStateToProps,{\n    get_products_by_arrival, \n    get_products_by_sold,\n}) (Home)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\Dashboard.jsx",["293","294","295","296"],"import Layout from '../../hocs/Layout'\nimport { connect } from 'react-redux'\nimport {list_orders} from '../../redux/actions/orders'\nimport {\n    get_items,\n    get_total,\n    get_item_total\n} from \"../../redux/actions/cart\";\nimport { useEffect } from 'react';\nimport { Navigate } from 'react-router';\nimport DashboardLink from '../../components/dashboard/DashboardLink';\nimport { Fragment, useState } from 'react'\nimport { Dialog, Menu, Transition } from '@headlessui/react'\nimport {\n  BellIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  FolderIcon,\n  HomeIcon,\n  InboxIcon,\n  MenuAlt2Icon,\n  UsersIcon,\n  XIcon,\n  PaperClipIcon\n} from '@heroicons/react/outline'\nimport { SearchIcon } from '@heroicons/react/solid'\nimport { Link } from 'react-router-dom';\nconst navigation = [\n  { name: 'Dashboard', href: '#', icon: HomeIcon, current: true },\n  { name: 'Team', href: '#', icon: UsersIcon, current: false },\n  { name: 'Projects', href: '#', icon: FolderIcon, current: false },\n  { name: 'Calendar', href: '#', icon: CalendarIcon, current: false },\n  { name: 'Documents', href: '#', icon: InboxIcon, current: false },\n  { name: 'Reports', href: '#', icon: ChartBarIcon, current: false },\n]\nconst userNavigation = [\n  { name: 'Your Profile', href: '#' },\n  { name: 'Settings', href: '#' },\n  { name: 'Sign out', href: '#' },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nconst Dashboard =({\n    list_orders,\n    get_items,\n    get_total,\n    get_item_total,\n    orders,\n    isAuthenticated,\n    user\n})=>{\n\n    const [sidebarOpen, setSidebarOpen] = useState(false)\n\n    useEffect(() => {\n        get_items()\n        get_total()\n        get_item_total()\n        list_orders()\n    }, [])\n\n    if(!isAuthenticated)\n        return <Navigate to=\"/\"/>\n\n    return (\n        <>\n            <div>\n        <Transition.Root show={sidebarOpen} as={Fragment}>\n          <Dialog as=\"div\" className=\"fixed inset-0 flex z-40 md:hidden\" onClose={setSidebarOpen}>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" />\n            </Transition.Child>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"-translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"-translate-x-full\"\n            >\n              <div className=\"relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white\">\n                <Transition.Child\n                  as={Fragment}\n                  enter=\"ease-in-out duration-300\"\n                  enterFrom=\"opacity-0\"\n                  enterTo=\"opacity-100\"\n                  leave=\"ease-in-out duration-300\"\n                  leaveFrom=\"opacity-100\"\n                  leaveTo=\"opacity-0\"\n                >\n                  <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n                    <button\n                      type=\"button\"\n                      className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n                      onClick={() => setSidebarOpen(false)}\n                    >\n                      <span className=\"sr-only\">Close sidebar</span>\n                      <XIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </Transition.Child>\n                <div className=\"flex-shrink-0 flex items-center px-4\">\n                    <Link to=\"/\">\n                  <img\n                    className=\"h-8 w-auto cursor-pointer\"\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\n                    alt=\"Workflow\"\n                  />\n                  </Link>\n                </div>\n                <div className=\"mt-5 flex-1 h-0 overflow-y-auto\">\n                  <nav className=\"px-2 space-y-1\">\n                  <DashboardLink/>\n                  </nav>\n                </div>\n              </div>\n            </Transition.Child>\n            <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\n              {/* Dummy element to force sidebar to shrink to fit close icon */}\n            </div>\n          </Dialog>\n        </Transition.Root>\n\n        {/* Static sidebar for desktop */}\n        <div className=\"hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n          {/* Sidebar component, swap this element with another sidebar if you like */}\n          <div className=\"flex flex-col flex-grow border-r border-gray-200 pt-5 bg-white overflow-y-auto\">\n            <div className=\"flex items-center flex-shrink-0 px-4\">\n\n            <Link\n                to=\"/\"\n                className=\"inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n                Regresar\n            </Link>\n            \n              <img\n                className=\"h-8 w-auto\"\n                src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\n                alt=\"Workflow\"\n              />\n              \n            </div>\n            <div className=\"mt-5 flex-grow flex flex-col\">\n              <nav className=\"flex-1 px-2 pb-4 space-y-1\">\n                <DashboardLink/>\n              </nav>\n            </div>\n          </div>\n        </div>\n        <div className=\"md:pl-64 flex flex-col flex-1\">\n          <div className=\"sticky top-0 z-10 flex-shrink-0 flex h-16 bg-white shadow\">\n            <button\n              type=\"button\"\n              className=\"px-4 border-r border-gray-200 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden\"\n              onClick={() => setSidebarOpen(true)}\n            >\n              <span className=\"sr-only\">Open sidebar</span>\n              <MenuAlt2Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n            <div className=\"flex-1 px-4 flex justify-between\">\n              <div className=\"flex-1 flex\">\n                <form className=\"w-full flex md:ml-0\" action=\"#\" method=\"GET\">\n                  <label htmlFor=\"search-field\" className=\"sr-only\">\n                    Search\n                  </label>\n                  <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\n                    <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\n                      <SearchIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </div>\n                    <input\n                      id=\"search-field\"\n                      className=\"block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\"\n                      placeholder=\"Search\"\n                      type=\"search\"\n                      name=\"search\"\n                    />\n                  </div>\n                </form>\n              </div>\n              <div className=\"ml-4 flex items-center md:ml-6\">\n                <button\n                  type=\"button\"\n                  className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Profile dropdown */}\n                <Menu as=\"div\" className=\"ml-3 relative\">\n                  <div>\n                    <Menu.Button className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                      <span className=\"sr-only\">Open user menu</span>\n                      <img\n                        className=\"h-8 w-8 rounded-full\"\n                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                        alt=\"\"\n                      />\n                    </Menu.Button>\n                  </div>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                      {userNavigation.map((item) => (\n                        <Menu.Item key={item.name}>\n                          {({ active }) => (\n                            <a\n                              href={item.href}\n                              className={classNames(\n                                active ? 'bg-gray-100' : '',\n                                'block px-4 py-2 text-sm text-gray-700'\n                              )}\n                            >\n                              {item.name}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ))}\n                    </Menu.Items>\n                  </Transition>\n                </Menu>\n              </div>\n            </div>\n          </div>\n\n          <main className=\"flex-1\">\n            <div className=\"py-6\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            {/* We've used 3xl here, but feel free to try other max-widths based on your needs */}\n            <div className=\"max-w-3xl mx-auto\">\n            <div>\n        <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Applicant Information</h3>\n        <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">Personal details and application.</p>\n      </div>\n      <div className=\"mt-5 border-t border-gray-200\">\n        <dl className=\"divide-y divide-gray-200\">\n          <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4\">\n            <dt className=\"text-sm font-medium text-gray-500\">Full name</dt>\n            <dd className=\"mt-1 flex text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n              <span className=\"flex-grow\">{user.first_name} {user.last_name}</span>\n              \n            </dd>\n          </div>\n\n          \n          <div className=\"py-4 sm:grid sm:py-5 sm:grid-cols-3 sm:gap-4\">\n            <dt className=\"text-sm font-medium text-gray-500\">Email address</dt>\n            <dd className=\"mt-1 flex text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n              <span className=\"flex-grow\">{user.email}</span>\n              \n            </dd>\n          </div>\n\n         \n        </dl>\n      </div>\n            </div>\n            </div>\n            </div>\n          </main>\n        </div>\n      </div>\n        </>\n    )\n}\n\nconst mapStateToProps =state=>({\n    orders: state.Orders.orders,\n    isAuthenticated: state.Auth.isAuthenticated,\n    user: state.Auth.user\n})\n\nexport default connect(mapStateToProps,{\n    list_orders,\n    get_items,\n    get_total,\n    get_item_total\n}) (Dashboard)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\errors\\Error404.jsx",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\hocs\\Layout.js",["297"],"import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { check_authenticated, load_user, refresh } from '../redux/actions/auth';\nimport {\n    get_items,\n    get_total,\n    get_item_total\n} from \"../redux/actions/cart\";\n\nimport {\n    get_user_profile\n} from \"../redux/actions/profile\";\n\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Navbar from '../components/navigation/Navbar';\nimport Footer from '../components/navigation/Footer';\n\nconst Layout = (props) => {\n\n    useEffect(() => {\n        props.refresh()\n        props.check_authenticated()\n        props.load_user()\n        props.get_items()\n        props.get_total()\n        props.get_item_total()\n        props.get_user_profile()\n    }, []);\n\n    return(\n        <div>\n            <Navbar/>\n            <ToastContainer autoClose={5000} />\n            {props.children}\n            <Footer/>\n        </div>\n    )\n}\n\n\nexport default connect(null, {\n    check_authenticated,\n    load_user,\n    refresh,\n    get_items,\n    get_total,\n    get_item_total,\n    get_user_profile\n}) (Layout)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\auth.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\reviews.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\alert.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\helpers\\fixedPrices.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\profile.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\helpers\\fixedCountries.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\home\\ProductsSold.js",["298","299"],"import { Link } from \"react-router-dom\"\nconst products = [\n    {\n      id: 1,\n      name: 'Black Basic Tee',\n      price: '$32',\n      href: '#',\n      imageSrc: 'https://tailwindui.com/img/ecommerce-images/home-page-03-favorite-01.jpg',\n      imageAlt: \"Model wearing women's black cotton crewneck tee.\",\n    },\n    // More products...\n  ]\n  \n  export default function ProductsSold({data}) {\n    return (\n      <div className=\"bg-white\">\n        <div className=\"max-w-7xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:px-8\">\n          <div className=\"sm:flex sm:items-baseline sm:justify-between\">\n            <h2 className=\"text-2xl font-extrabold tracking-tight text-gray-900\">Los mas vendidos</h2>\n            <a href=\"#\" className=\"hidden text-sm font-semibold text-indigo-600 hover:text-indigo-500 sm:block\">\n              Browse all favorites<span aria-hidden=\"true\"> &rarr;</span>\n            </a>\n          </div>\n  \n          <div className=\"mt-6 grid grid-cols-1 gap-y-10 sm:grid-cols-3 sm:gap-y-0 sm:gap-x-6 lg:gap-x-8\">\n            {data && \n            data !== null &&\n            data !== undefined &&\n            data.map((product) => (\n              <div key={product.id} className=\"group relative\">\n                <div className=\"w-full h-96 rounded-lg overflow-hidden group-hover:opacity-75 sm:h-auto sm:aspect-w-2 sm:aspect-h-3\">\n                  <img\n                    src={product.photo}\n                    alt=\"\"\n                    className=\"w-full h-full object-center object-cover\"\n                  />\n                </div>\n                <h3 className=\"mt-4 text-base font-semibold text-gray-900\">\n                  <Link to={`/product/${product.id}`}>\n                    <span className=\"absolute inset-0\" />\n                    {product.name}\n                  </Link>\n                </h3>\n                <p className=\"mt-1 text-sm text-gray-500\">${product.price}</p>\n              </div>\n            ))}\n          </div>\n  \n          <div className=\"mt-6 sm:hidden\">\n            <Link to=\"#\" className=\"block text-sm font-semibold text-indigo-600 hover:text-indigo-500\">\n              Ver mas productos<span aria-hidden=\"true\"> &rarr;</span>\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  ","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\home\\Banner.js",["300"],"/* This example requires Tailwind CSS v2.0+ */\nexport default function Example() {\n    return (\n      <div className=\"relative bg-white overflow-hidden\">\n        <div className=\"pt-16 pb-80 sm:pt-24 sm:pb-40 lg:pt-40 lg:pb-48\">\n          <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 sm:static\">\n            <div className=\"sm:max-w-lg\">\n              <h1 className=\"text-4xl font font-extrabold tracking-tight text-gray-900 sm:text-6xl\">\n                Summer styles are finally here\n              </h1>\n              <p className=\"mt-4 text-xl text-gray-500\">\n                This year, our new summer collection will shelter you from the harsh elements of a world that doesn't care\n                if you live or die.\n              </p>\n            </div>\n            <div>\n              <div className=\"mt-10\">\n                {/* Decorative image grid */}\n                <div\n                  aria-hidden=\"true\"\n                  className=\"pointer-events-none lg:absolute lg:inset-y-0 lg:max-w-7xl lg:mx-auto lg:w-full\"\n                >\n                  <div className=\"absolute transform sm:left-1/2 sm:top-0 sm:translate-x-8 lg:left-1/2 lg:top-1/2 lg:-translate-y-1/2 lg:translate-x-8\">\n                    <div className=\"flex items-center space-x-6 lg:space-x-8\">\n                      <div className=\"flex-shrink-0 grid grid-cols-1 gap-y-6 lg:gap-y-8\">\n                        <div className=\"w-44 h-64 rounded-lg overflow-hidden sm:opacity-0 lg:opacity-100\">\n                          <img\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-01.jpg\"\n                            alt=\"\"\n                            className=\"w-full h-full object-center object-cover\"\n                          />\n                        </div>\n                        <div className=\"w-44 h-64 rounded-lg overflow-hidden\">\n                          <img\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-02.jpg\"\n                            alt=\"\"\n                            className=\"w-full h-full object-center object-cover\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"flex-shrink-0 grid grid-cols-1 gap-y-6 lg:gap-y-8\">\n                        <div className=\"w-44 h-64 rounded-lg overflow-hidden\">\n                          <img\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-03.jpg\"\n                            alt=\"\"\n                            className=\"w-full h-full object-center object-cover\"\n                          />\n                        </div>\n                        <div className=\"w-44 h-64 rounded-lg overflow-hidden\">\n                          <img\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-04.jpg\"\n                            alt=\"\"\n                            className=\"w-full h-full object-center object-cover\"\n                          />\n                        </div>\n                        <div className=\"w-44 h-64 rounded-lg overflow-hidden\">\n                          <img\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-05.jpg\"\n                            alt=\"\"\n                            className=\"w-full h-full object-center object-cover\"\n                          />\n                        </div>\n                      </div>\n                      <div className=\"flex-shrink-0 grid grid-cols-1 gap-y-6 lg:gap-y-8\">\n                        <div className=\"w-44 h-64 rounded-lg overflow-hidden\">\n                          <img\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-06.jpg\"\n                            alt=\"\"\n                            className=\"w-full h-full object-center object-cover\"\n                          />\n                        </div>\n                        <div className=\"w-44 h-64 rounded-lg overflow-hidden\">\n                          <img\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-07.jpg\"\n                            alt=\"\"\n                            className=\"w-full h-full object-center object-cover\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n  \n                <a\n                  href=\"#\"\n                  className=\"inline-block text-center bg-indigo-600 border border-transparent rounded-md py-3 px-8 font-medium text-white hover:bg-indigo-700\"\n                >\n                  Shop Collection\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  ","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\home\\ProductsArrival.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\dashboard\\DashboardLink.js",["301","302","303","304","305","306","307","308","309","310"],"import { Link } from \"react-router-dom\"\nimport {\n    BellIcon,\n    CalendarIcon,\n    ChartBarIcon,\n    FolderIcon,\n    HomeIcon,\n    InboxIcon,\n    MenuAlt2Icon,\n    UsersIcon,\n    XIcon,\n    PaperClipIcon\n  } from '@heroicons/react/outline'\n  import { CreditCardIcon, SearchIcon, UserIcon } from '@heroicons/react/solid'\n\n  function classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n  }\nconst DashboardLink =()=>{\n    return(\n        <>\n            <Link\n            to=\"/dashboard\"\n            className={classNames('text-gray-600 hover:bg-gray-50 hover:text-gray-900',\n                'group flex items-center px-2 py-2 text-base font-medium rounded-md'\n            )}\n            >\n            <CalendarIcon\n                className={classNames(\n                'mr-4 flex-shrink-0 h-6 w-6 text-gray-400 group-hover:text-gray-500',\n                )}\n                aria-hidden=\"true\"\n            />\n            Dashboard\n            </Link>\n            \n            <Link\n            to=\"/dashboard/payments\"\n            className={classNames('text-gray-600 hover:bg-gray-50 hover:text-gray-900',\n                'group flex items-center px-2 py-2 text-base font-medium rounded-md'\n            )}\n            >\n            <CreditCardIcon\n                className={classNames(\n                'mr-4 flex-shrink-0 h-6 w-6 text-gray-400 group-hover:text-gray-500',\n                )}\n                aria-hidden=\"true\"\n            />\n            Payment History\n            </Link>\n            \n            <Link\n            to=\"/dashboard/profile\"\n            className={classNames('text-gray-600 hover:bg-gray-50 hover:text-gray-900',\n                'group flex items-center px-2 py-2 text-base font-medium rounded-md'\n            )}\n            >\n            <UserIcon\n                className={classNames(\n                'mr-4 flex-shrink-0 h-6 w-6 text-gray-400 group-hover:text-gray-500',\n                )}\n                aria-hidden=\"true\"\n            />\n            Profile\n            </Link>\n        </>\n    )\n}\n\nexport default DashboardLink","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\navigation\\Footer.js",["311","312","313","314"],"/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n    ],\n  }\n  ```\n*/\nconst navigation = {\n    solutions: [\n      { name: 'Marketing', href: '#' },\n      { name: 'Analytics', href: '#' },\n      { name: 'Commerce', href: '#' },\n      { name: 'Insights', href: '#' },\n    ],\n    support: [\n      { name: 'Pricing', href: '#' },\n      { name: 'Documentation', href: '#' },\n      { name: 'Guides', href: '#' },\n      { name: 'API Status', href: '#' },\n    ],\n    company: [\n      { name: 'About', href: '#' },\n      { name: 'Blog', href: '#' },\n      { name: 'Jobs', href: '#' },\n      { name: 'Press', href: '#' },\n      { name: 'Partners', href: '#' },\n    ],\n    legal: [\n      { name: 'Claim', href: '#' },\n      { name: 'Privacy', href: '#' },\n      { name: 'Terms', href: '#' },\n    ],\n    social: [\n      {\n        name: 'Facebook',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path\n              fillRule=\"evenodd\"\n              d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        ),\n      },\n      {\n        name: 'Instagram',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path\n              fillRule=\"evenodd\"\n              d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        ),\n      },\n      {\n        name: 'Twitter',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path d=\"M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84\" />\n          </svg>\n        ),\n      },\n      {\n        name: 'GitHub',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path\n              fillRule=\"evenodd\"\n              d=\"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        ),\n      },\n      {\n        name: 'Dribbble',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path\n              fillRule=\"evenodd\"\n              d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10c5.51 0 10-4.48 10-10S17.51 2 12 2zm6.605 4.61a8.502 8.502 0 011.93 5.314c-.281-.054-3.101-.629-5.943-.271-.065-.141-.12-.293-.184-.445a25.416 25.416 0 00-.564-1.236c3.145-1.28 4.577-3.124 4.761-3.362zM12 3.475c2.17 0 4.154.813 5.662 2.148-.152.216-1.443 1.941-4.48 3.08-1.399-2.57-2.95-4.675-3.189-5A8.687 8.687 0 0112 3.475zm-3.633.803a53.896 53.896 0 013.167 4.935c-3.992 1.063-7.517 1.04-7.896 1.04a8.581 8.581 0 014.729-5.975zM3.453 12.01v-.26c.37.01 4.512.065 8.775-1.215.25.477.477.965.694 1.453-.109.033-.228.065-.336.098-4.404 1.42-6.747 5.303-6.942 5.629a8.522 8.522 0 01-2.19-5.705zM12 20.547a8.482 8.482 0 01-5.239-1.8c.152-.315 1.888-3.656 6.703-5.337.022-.01.033-.01.054-.022a35.318 35.318 0 011.823 6.475 8.4 8.4 0 01-3.341.684zm4.761-1.465c-.086-.52-.542-3.015-1.659-6.084 2.679-.423 5.022.271 5.314.369a8.468 8.468 0 01-3.655 5.715z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        ),\n      },\n    ],\n  }\n  \n  export default function Footer() {\n    return (\n      <footer className=\"bg-white\" aria-labelledby=\"footer-heading\">\n        <h2 id=\"footer-heading\" className=\"sr-only\">\n          Footer\n        </h2>\n        <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8\">\n          <div className=\"xl:grid xl:grid-cols-3 xl:gap-8\">\n            <div className=\"grid grid-cols-2 gap-8 xl:col-span-2\">\n              <div className=\"md:grid md:grid-cols-2 md:gap-8\">\n                <div>\n                  <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Solutions</h3>\n                  <ul role=\"list\" className=\"mt-4 space-y-4\">\n                    {navigation.solutions.map((item) => (\n                      <li key={item.name}>\n                        <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\n                          {item.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"mt-12 md:mt-0\">\n                  <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Support</h3>\n                  <ul role=\"list\" className=\"mt-4 space-y-4\">\n                    {navigation.support.map((item) => (\n                      <li key={item.name}>\n                        <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\n                          {item.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              <div className=\"md:grid md:grid-cols-2 md:gap-8\">\n                <div>\n                  <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Company</h3>\n                  <ul role=\"list\" className=\"mt-4 space-y-4\">\n                    {navigation.company.map((item) => (\n                      <li key={item.name}>\n                        <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\n                          {item.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"mt-12 md:mt-0\">\n                  <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Legal</h3>\n                  <ul role=\"list\" className=\"mt-4 space-y-4\">\n                    {navigation.legal.map((item) => (\n                      <li key={item.name}>\n                        <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\n                          {item.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-8 xl:mt-0\">\n              <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">\n                Subscribe to our newsletter\n              </h3>\n              <p className=\"mt-4 text-base text-gray-500\">\n                The latest news, articles, and resources, sent to your inbox weekly.\n              </p>\n              <form className=\"mt-4 sm:flex sm:max-w-md\">\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"appearance-none min-w-0 w-full bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 text-base text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:placeholder-gray-400\"\n                  placeholder=\"Enter your email\"\n                />\n                <div className=\"mt-3 rounded-md sm:mt-0 sm:ml-3 sm:flex-shrink-0\">\n                  <button\n                    type=\"submit\"\n                    className=\"w-full bg-indigo-600 flex items-center justify-center border border-transparent rounded-md py-2 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    Subscribe\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"mt-8 border-t border-gray-200 pt-8 md:flex md:items-center md:justify-between\">\n            <div className=\"flex space-x-6 md:order-2\">\n              {navigation.social.map((item) => (\n                <a key={item.name} href={item.href} className=\"text-gray-400 hover:text-gray-500\">\n                  <span className=\"sr-only\">{item.name}</span>\n                  <item.icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </a>\n              ))}\n            </div>\n            <p className=\"mt-8 text-base text-gray-400 md:mt-0 md:order-1\">\n              &copy; 2020 Workflow, Inc. All rights reserved.\n            </p>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n  ","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\navigation\\Navbar.js",["315","316","317","318","319","320","321","322","323","324","325","326","327","328"],"/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useEffect, useState } from 'react'\nimport { Menu ,Popover, Transition } from '@headlessui/react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { Navigate } from 'react-router'\nimport Alert from '../../components/alert'\n\nimport {\n  BookmarkAltIcon,\n  BriefcaseIcon,\n  ChartBarIcon,\n  CheckCircleIcon,\n  CursorClickIcon,\n  DesktopComputerIcon,\n  GlobeAltIcon,\n  InformationCircleIcon,\n  MenuIcon,\n  NewspaperIcon,\n  OfficeBuildingIcon,\n  PhoneIcon,\n  PlayIcon,\n  ShieldCheckIcon,\n  UserGroupIcon,\n  ViewGridIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport { connect } from 'react-redux'\nimport { logout } from '../../redux/actions/auth'\nimport { get_categories } from '../../redux/actions/categories'\nimport { get_search_products } from '../../redux/actions/products';\nimport SearchBox from './SearchBox'\nimport { ShoppingCartIcon } from '@heroicons/react/solid'\n\nconst solutions = [\n  {\n    name: 'Analytics',\n    description: 'Get a better understanding of where your traffic is coming from.',\n    href: '#',\n    icon: ChartBarIcon,\n  },\n  {\n    name: 'Engagement',\n    description: 'Speak directly to your customers in a more meaningful way.',\n    href: '#',\n    icon: CursorClickIcon,\n  },\n  { name: 'Security', description: \"Your customers' data will be safe and secure.\", href: '#', icon: ShieldCheckIcon },\n  {\n    name: 'Integrations',\n    description: \"Connect with third-party tools that you're already using.\",\n    href: '#',\n    icon: ViewGridIcon,\n  },\n]\nconst callsToAction = [\n  { name: 'Watch Demo', href: '#', icon: PlayIcon },\n  { name: 'View All Products', href: '#', icon: CheckCircleIcon },\n  { name: 'Contact Sales', href: '#', icon: PhoneIcon },\n]\nconst company = [\n  { name: 'About', href: '#', icon: InformationCircleIcon },\n  { name: 'Customers', href: '#', icon: OfficeBuildingIcon },\n  { name: 'Press', href: '#', icon: NewspaperIcon },\n  { name: 'Careers', href: '#', icon: BriefcaseIcon },\n  { name: 'Privacy', href: '#', icon: ShieldCheckIcon },\n]\nconst resources = [\n  { name: 'Community', href: '#', icon: UserGroupIcon },\n  { name: 'Partners', href: '#', icon: GlobeAltIcon },\n  { name: 'Guides', href: '#', icon: BookmarkAltIcon },\n  { name: 'Webinars', href: '#', icon: DesktopComputerIcon },\n]\nconst blogPosts = [\n  {\n    id: 1,\n    name: 'Boost your conversion rate',\n    href: '#',\n    preview: 'Eget ullamcorper ac ut vulputate fames nec mattis pellentesque elementum. Viverra tempor id mus.',\n    imageUrl:\n      'https://images.unsplash.com/photo-1558478551-1a378f63328e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2849&q=80',\n  },\n  {\n    id: 2,\n    name: 'How to use search engine optimization to drive traffic to your site',\n    href: '#',\n    preview: 'Eget ullamcorper ac ut vulputate fames nec mattis pellentesque elementum. Viverra tempor id mus.',\n    imageUrl:\n      'https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2300&q=80',\n  },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nfunction Navbar({\n  isAuthenticated,\n  user,\n  logout,\n  get_categories,\n  categories,\n  get_search_products,\n  total_items\n}) {\n\n  // eslint-disable-next-line\n  const [redirect, setRedirect] = useState(false);\n\n  const [render, setRender] = useState(false);\n  const [formData, setFormData] = useState({\n    category_id: 0,\n    search: ''\n  });\n  const { category_id, search } = formData;\n  \n  useEffect(() => {\n    get_categories()\n  }, [])\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    get_search_products(search, category_id);\n    setRender(!render);\n  }\n\n  if(render){\n    return <Navigate to='/search' />;\n  }\n\n  const logoutHandler = () => {\n    logout()\n    setRedirect(true);\n  }\n\n  if (redirect){\n    window.location.reload(false)\n    return <Navigate to='/' />;\n  }\n\n  const authLinks = (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"inline-flex justify-center w-full rounded-full  text-sm font-medium text-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\">\n          <span className=\"inline-block h-10 w-10 rounded-full overflow-hidden bg-gray-100\">\n            <svg className=\"h-full w-full text-gray-300\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z\" />\n            </svg>\n          </span>\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            <Menu.Item>\n              {({ active }) => (\n                <Link\n                  to=\"/dashboard\"\n                  className={classNames(\n                    active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                    'block px-4 py-2 text-sm'\n                  )}\n                >\n                  Dashboard\n                </Link>\n              )}\n            </Menu.Item>\n            \n            \n            <form method=\"POST\" action=\"#\">\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    onClick={logoutHandler}\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'block w-full text-left px-4 py-2 text-sm'\n                    )}\n                  >\n                    Sign out\n                  </button>\n                )}\n              </Menu.Item>\n            </form>\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n\n  const guestLinks = (\n    <Fragment>\n      <Link to=\"/login\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n        Sign in\n      </Link>\n      <Link\n        to=\"/signup\"\n        className=\"ml-8 inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n      >\n        Sign up\n      </Link>\n    </Fragment>\n  )\n\n  return (\n    <>\n    <Popover className=\"relative bg-white\">\n      <div className=\"absolute inset-0  z-30 pointer-events-none\" aria-hidden=\"true\" />\n      <div className=\"relative z-20\">\n        <div className=\"max-w-7xl mx-auto flex justify-between items-center px-4 py-5 sm:px-6 sm:py-4 lg:px-8 md:justify-start md:space-x-10\">\n          <div>\n            <Link to=\"/\" className=\"flex\">\n              <span className=\"sr-only\">Workflow</span>\n              <img\n                className=\"h-8 w-auto sm:h-10\"\n                src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                alt=\"\"\n              />\n            </Link>\n          </div>\n          <div className=\"-mr-2 -my-2 md:hidden\">\n            \n            <Link to=\"/cart\" className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n              <span className=\"sr-only\">Open menu</span>\n              <ShoppingCartIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n              <span className=\"text-xs absolute top-1 mt-3 ml-4 bg-red-500 text-white font-semibold rounded-full px-2 text-center\">{total_items}</span>\n            </Link>\n            <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n              <span className=\"sr-only\">Open menu</span>\n              <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </Popover.Button>\n          </div>\n          <div className=\"hidden md:flex-1 md:flex md:items-center md:justify-between\">\n            <Popover.Group as=\"nav\" className=\"flex space-x-10\">\n              \n              <NavLink to=\"/shop\" className={window.location.pathname==='/search'?' text-base font-medium text-gray-500 hover:text-gray-900':'mt-2 text-base font-medium text-gray-500 hover:text-gray-900'}>\n                Shop\n              </NavLink>\n              \n              {window.location.pathname==='/search'?<></>:<SearchBox \n              search={search}\n              onChange={onChange}\n              onSubmit={onSubmit}\n              categories={categories}\n              />}\n              \n             \n            </Popover.Group>\n            <div className=\"flex items-center md:ml-12\">\n              <Link to=\"/cart\">\n                <ShoppingCartIcon className=\"h-8 w-8 cursor-pointer text-gray-300 mr-4\"/>\n                <span className=\"text-xs absolute top-1 mt-3 ml-4 bg-red-500 text-white font-semibold rounded-full px-2 text-center\">{total_items}</span>\n              </Link>\n              {\n                isAuthenticated ? authLinks:guestLinks\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"duration-200 ease-out\"\n        enterFrom=\"opacity-0 scale-95\"\n        enterTo=\"opacity-100 scale-100\"\n        leave=\"duration-100 ease-in\"\n        leaveFrom=\"opacity-100 scale-100\"\n        leaveTo=\"opacity-0 scale-95\"\n      >\n        <Popover.Panel\n          focus\n          className=\"absolute z-30 top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\"\n        >\n          <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n            <div className=\"pt-5 pb-6 px-5 sm:pb-8\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <img\n                    className=\"h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                    alt=\"Workflow\"\n                  />\n                </div>\n                <div className=\"-mr-2\">\n                  <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                    <span className=\"sr-only\">Close menu</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </Popover.Button>\n                </div>\n              </div>\n              <div className=\"mt-6 sm:mt-8\">\n                <nav>\n                  <div className=\"grid gap-7 sm:grid-cols-2 sm:gap-y-8 sm:gap-x-4\">\n                    {solutions.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className=\"-m-3 flex items-center p-3 rounded-lg hover:bg-gray-50\"\n                      >\n                        <div className=\"flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-md bg-indigo-500 text-white sm:h-12 sm:w-12\">\n                          <item.icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                        </div>\n                        <div className=\"ml-4 text-base font-medium text-gray-900\">{item.name}</div>\n                      </a>\n                    ))}\n                  </div>\n                  <div className=\"mt-8 text-base\">\n                    <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                      {' '}\n                      View all products <span aria-hidden=\"true\">&rarr;</span>\n                    </a>\n                  </div>\n                </nav>\n              </div>\n            </div>\n            <div className=\"py-6 px-5\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <a href=\"#\" className=\"rounded-md text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Pricing\n                </a>\n\n                <a href=\"#\" className=\"rounded-md text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Docs\n                </a>\n\n                <a href=\"#\" className=\"rounded-md text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Company\n                </a>\n\n                <a href=\"#\" className=\"rounded-md text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Resources\n                </a>\n\n                <a href=\"#\" className=\"rounded-md text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Blog\n                </a>\n\n                <a href=\"#\" className=\"rounded-md text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Contact Sales\n                </a>\n              </div>\n              <div className=\"mt-6\">\n              {isAuthenticated?<Link\n                  to=\"/dashboard\"\n                  className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                >\n                  Sign up\n                </Link>:\n                <a\n                href=\"#\"\n                className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n              >\n                Sign up\n              </a>}\n                \n\n                <p className=\"mt-6 text-center text-base font-medium text-gray-500\">\n                  Existing customer?{' '}\n                  \n                  \n                  <a href=\"#\" className=\"text-indigo-600 hover:text-indigo-500\">\n                    Sign in\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </Popover.Panel>\n      </Transition>\n    </Popover>\n    <Alert/>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.Auth.isAuthenticated,\n  user: state.Auth.user,\n  categories: state.Categories.categories,\n  total_items: state.Cart.total_items\n})\n\nexport default connect(mapStateToProps,{\n  logout,\n  get_categories,\n  get_search_products\n}) (Navbar)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\index.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\types.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\alert.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\navigation\\SearchBox.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\alert.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\auth.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\profile.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\reviews.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\Shop.jsx",["329","330","331","332","333","334","335","336","337","338","339","340","341"],"import Layout from '../hocs/Layout'\nimport { Fragment, useState, useEffect } from 'react'\nimport { Dialog, Disclosure, Menu, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { ChevronDownIcon, FilterIcon, MinusSmIcon, PlusSmIcon, ViewGridIcon } from '@heroicons/react/solid'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {get_categories} from '../redux/actions/categories'\nimport {get_products, get_filtered_products} from '../redux/actions/products'\nimport ProductCard from '../components/product/ProductCard'\nimport { prices } from '../helpers/fixedPrices'\nconst sortOptions = [\n  { name: 'Most Popular', href: '#', current: true },\n  { name: 'Best Rating', href: '#', current: false },\n  { name: 'Newest', href: '#', current: false },\n  { name: 'Price: Low to High', href: '#', current: false },\n  { name: 'Price: High to Low', href: '#', current: false },\n]\nconst subCategories = [\n  { name: 'Totes', href: '#' },\n  { name: 'Backpacks', href: '#' },\n  { name: 'Travel Bags', href: '#' },\n  { name: 'Hip Bags', href: '#' },\n  { name: 'Laptop Sleeves', href: '#' },\n]\nconst filters = [\n  {\n    id: 'color',\n    name: 'Color',\n    options: [\n      { value: 'white', label: 'White', checked: false },\n      { value: 'beige', label: 'Beige', checked: false },\n      { value: 'blue', label: 'Blue', checked: true },\n      { value: 'brown', label: 'Brown', checked: false },\n      { value: 'green', label: 'Green', checked: false },\n      { value: 'purple', label: 'Purple', checked: false },\n    ],\n  },\n  {\n    id: 'category',\n    name: 'Category',\n    options: [\n      { value: 'new-arrivals', label: 'New Arrivals', checked: false },\n      { value: 'sale', label: 'Sale', checked: false },\n      { value: 'travel', label: 'Travel', checked: true },\n      { value: 'organization', label: 'Organization', checked: false },\n      { value: 'accessories', label: 'Accessories', checked: false },\n    ],\n  },\n  {\n    id: 'size',\n    name: 'Size',\n    options: [\n      { value: '2l', label: '2L', checked: false },\n      { value: '6l', label: '6L', checked: false },\n      { value: '12l', label: '12L', checked: false },\n      { value: '18l', label: '18L', checked: false },\n      { value: '20l', label: '20L', checked: false },\n      { value: '40l', label: '40L', checked: true },\n    ],\n  },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nconst Shop = ({\n    get_categories,\n    categories,\n    get_products,\n    products,\n    get_filtered_products,\n    filtered_products\n}) => {\n    const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false)\n    const [filtered, setFiltered] = useState(false)\n    const [formData, setFormData] = useState({\n      category_id: '0',\n      price_range: 'Any',\n      sortBy: 'created',\n      order: 'desc'\n    })\n\n    const { \n      category_id,\n      price_range,\n      sortBy,\n      order\n    } = formData\n\n    useEffect(() => {\n        get_categories()\n        get_products()\n        window.scrollTo(0,0)\n    }, [])\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = e => {\n      e.preventDefault()\n      get_filtered_products(category_id, price_range, sortBy , order)\n      setFiltered(true)\n    }\n\n    const showProducts = () => {\n      let results = []\n      let display = []\n\n      if (\n        filtered_products &&\n        filtered_products !== null &&\n        filtered_products !== undefined &&\n        filtered\n      ) {\n        filtered_products.map((product, index) => {\n            return display.push(\n                <div key={index}>\n                    <ProductCard product={product}/>\n                </div>\n            );\n        });\n      } else if (\n          !filtered && \n          products &&\n          products !== null && \n          products !== undefined\n      ) {\n          products.map((product, index) => {\n            return display.push(\n                <div key={index}>\n                    <ProductCard product={product}/>\n                </div>\n            );\n        });\n      }\n\n      for (let i = 0; i < display.length; i += 3) {\n        results.push(\n          <div key={i} className='grid md:grid-cols-3 '>\n              {display[i] ? display[i] : <div className=''></div>}\n              {display[i+1] ? display[i+1] : <div className=''></div>}\n              {display[i+2] ? display[i+2] : <div className=''></div>}\n          </div>\n        )\n      }\n\n      return results\n\n    }\n\n\n\n    return (\n        <Layout>\n            <div className=\"bg-white\">\n      <div>\n        {/* Mobile filter dialog */}\n        <Transition.Root show={mobileFiltersOpen} as={Fragment}>\n          <Dialog as=\"div\" className=\"fixed inset-0 flex z-40 lg:hidden\" onClose={setMobileFiltersOpen}>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-black bg-opacity-25\" />\n            </Transition.Child>\n\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"translate-x-full\"\n            >\n              <div className=\"ml-auto relative max-w-xs w-full h-full bg-white shadow-xl py-4 pb-12 flex flex-col overflow-y-auto\">\n                <div className=\"px-4 flex items-center justify-between\">\n                  <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\n                  <button\n                    type=\"button\"\n                    className=\"-mr-2 w-10 h-10 bg-white p-2 rounded-md flex items-center justify-center text-gray-400\"\n                    onClick={() => setMobileFiltersOpen(false)}\n                  >\n                    <span className=\"sr-only\">Close menu</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n\n                {/* MOBILE FILTERS */}\n                <form onSubmit={e => onSubmit(e)} className=\"mt-4 border-t border-gray-200\">\n                  <h3 className=\"sr-only\">Categories</h3>\n                  <ul role=\"list\" className=\"font-medium text-gray-900 px-2 py-3\">\n                    {\n                        categories &&\n                        categories !== null &&\n                        categories !== undefined &&\n                        categories.map(category => {\n                            if (category.sub_categories.length === 0){\n                                return (\n                                    <div key={category.id} className=' flex items-center h-5 my-5'>\n                                        <input\n                                            name='category_id'\n                                            onChange={e => onChange(e)}\n                                            value={category.id.toString()}\n                                            type='radio'\n                                            className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                        />\n                                        <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                            {category.name}\n                                        </label>\n                                    </div>\n                                )\n                            } else {\n                                let result = []\n                                result.push(\n                                    <div key={category.id} className='flex items-center h-5'>\n                                        <input\n                                            name='category_id'\n                                            onChange={e => onChange(e)}\n                                            value={category.id.toString()}\n                                            type='radio'\n                                            className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                        />\n                                        <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                            {category.name}\n                                        </label>\n                                    </div>\n                                )\n\n                                category.sub_categories.map(sub_category => {\n                                    result.push(\n                                        <div key={sub_category.id} className='flex items-center h-5 ml-2 my-5'>\n                                            <input\n                                                name='category_id'\n                                                onChange={e => onChange(e)}\n                                                value={sub_category.id.toString()}\n                                                type='radio'\n                                                className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                            />\n                                            <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                                {sub_category.name}\n                                            </label>\n                                        </div>\n                                    )\n                                })\n\n                                return result\n                            }\n                        })\n                    }\n                  </ul>\n\n                  <Disclosure as=\"div\" className=\"border-t border-gray-200 px-4 py-6\">\n                  {({ open }) => (\n                    <>\n                    <h3 className=\"-mx-2 -my-3 flow-root\">\n                      <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                        <span className=\"font-sofiapro-regular text-gray-900\">Prices</span>\n                        <span className=\"ml-6 flex items-center\">\n                          {open ? (\n                            <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          ) : (\n                            <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          )}\n                        </span>\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"pt-6\">\n                        <div className=\"space-y-6\">\n                          {\n                              prices && prices.map((price, index) => {\n                                  if (price.id === 0) {\n                                      return (\n                                          <div key={index} className='form-check'>\n                                              <input\n                                                  onChange={e => onChange(e)}\n                                                  value={price.name}\n                                                  name='price_range'\n                                                  type='radio'\n                                                  className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                                  defaultChecked\n                                              />\n                                              <label className='ml-3 min-w-0 flex-1 text-gray-500 font-sofiapro-light'>{price.name}</label>\n                                          </div>\n                                      )\n                                  } else {\n                                      return (\n                                          <div key={index} className='form-check'>\n                                              <input\n                                                  onChange={e => onChange(e)}\n                                                  value={price.name}\n                                                  name='price_range'\n                                                  type='radio'\n                                                  className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                              />\n                                              <label className='ml-3 min-w-0 flex-1 text-gray-500 font-sofiapro-light'>{price.name}</label>\n                                          </div>\n                                      )\n                                  }\n                              })\n                          }\n                        </div>\n                      </Disclosure.Panel>\n\n                      \n\n                    </h3>\n                    </>\n                  )}\n                  </Disclosure>\n\n                  <Disclosure as=\"div\" className=\"border-t border-gray-200 px-4 py-6\">\n                  {({ open }) => (\n                    <>\n                    <h3 className=\"-mx-2 -my-3 flow-root\">\n                      <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                        <span className=\"font-sofiapro-regular text-gray-900\">Mas Filtros</span>\n                        <span className=\"ml-6 flex items-center\">\n                          {open ? (\n                            <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          ) : (\n                            <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          )}\n                        </span>\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"pt-6\">\n                        <div className=\"space-y-6\">\n                          <div className='form-group '>\n                              <label htmlFor='sortBy' className='mr-3 min-w-0 flex-1 text-gray-500'\n                              >Ver por</label>\n                                <select\n                                    className='my-2 font-sofiapro-light inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500'\n                                    id='sortBy'\n                                    name='sortBy'\n                                    onChange={e => onChange(e)}\n                                    value={sortBy}\n                                >\n                                  <option value='date_created'>Fecha</option>\n                                  <option value='price'>Precio</option>\n                                  <option value='sold'>Sold</option>\n                                  <option value='title'>Nombre</option>\n\n                                </select>\n                          </div>\n                          <div className='form-group'>\n                              <label htmlFor='order' className='mr-3 min-w-0 flex-1 text-gray-500'\n                              >Orden</label>\n                              <select\n                                  className='my-2 font-sofiapro-light inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500'\n                                  id='order'\n                                  name='order'\n                                  onChange={e => onChange(e)}\n                                  value={order}\n                              >\n                                  <option value='asc'>A - Z</option>\n                                  <option value='desc'>Z - A</option>\n                              </select>\n                          </div>\n                        </div>\n                      </Disclosure.Panel>\n                    </h3>\n                    </>\n                  )}\n                  </Disclosure>\n\n                  <button\n        type=\"submit\"\n        className=\"float-right inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        Buscar\n      </button>\n\n\n                </form>\n              </div>\n            </Transition.Child>\n          </Dialog>\n        </Transition.Root>\n\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"relative z-10 flex items-baseline justify-between pt-24 pb-6 border-b border-gray-200\">\n            <h1 className=\"text-4xl font-extrabold tracking-tight text-gray-900\">Shop</h1>\n\n            <div className=\"flex items-center\">\n              <button\n                type=\"button\"\n                className=\"p-2 -m-2 ml-4 sm:ml-6 text-gray-400 hover:text-gray-500 lg:hidden\"\n                onClick={() => setMobileFiltersOpen(true)}\n              >\n                <span className=\"sr-only\">Filters</span>\n                <FilterIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </div>\n\n          <section aria-labelledby=\"products-heading\" className=\"pt-6 pb-24\">\n            <h2 id=\"products-heading\" className=\"sr-only\">\n              Products\n            </h2>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-x-8 gap-y-10\">\n              {/* Filters */}\n              <form onSubmit={e=>onSubmit(e)} className=\"hidden lg:block\">\n                <h3 className=\"sr-only\">Categories</h3>\n                <ul role=\"list\" className=\"text-sm font-medium text-gray-900 space-y-4 pb-6 border-b border-gray-200\">\n                {\n                        categories &&\n                        categories !== null &&\n                        categories !== undefined &&\n                        categories.map(category => {\n                            if (category.sub_categories.length === 0){\n                                return (\n                                    <div key={category.id} className=' flex items-center h-5 my-5'>\n                                        <input\n                                            name='category_id'\n                                            type='radio'\n                                            className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                        />\n                                        <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                            {category.name}\n                                        </label>\n                                    </div>\n                                )\n                            } else {\n                                let result = []\n                                result.push(\n                                    <div key={category.id} className='flex items-center h-5'>\n                                        <input\n                                            name='category_id'\n                                            type='radio'\n                                            className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                        />\n                                        <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                            {category.name}\n                                        </label>\n                                    </div>\n                                )\n\n                                category.sub_categories.map(sub_category => {\n                                    result.push(\n                                        <div key={sub_category.id} className='flex items-center h-5 ml-2 my-5'>\n                                            <input\n                                                name='category_id'\n                                                type='radio'\n                                                className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                            />\n                                            <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                                {sub_category.name}\n                                            </label>\n                                        </div>\n                                    )\n                                })\n\n                                return result\n                            }\n                        })\n                    }\n                </ul>\n\n                <Disclosure as=\"div\" className=\"border-t border-gray-200 px-4 py-6\">\n                  {({ open }) => (\n                    <>\n                    <h3 className=\"-mx-2 -my-3 flow-root\">\n                      <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                        <span className=\"font-sofiapro-regular text-gray-900\">Prices</span>\n                        <span className=\"ml-6 flex items-center\">\n                          {open ? (\n                            <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          ) : (\n                            <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          )}\n                        </span>\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"pt-6\">\n                        <div className=\"space-y-6\">\n                          {\n                              prices && prices.map((price, index) => {\n                                  if (price.id === 0) {\n                                      return (\n                                          <div key={index} className='form-check'>\n                                              <input\n                                                  onChange={e => onChange(e)}\n                                                  value={price.name}\n                                                  name='price_range'\n                                                  type='radio'\n                                                  className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                                  defaultChecked\n                                              />\n                                              <label className='ml-3 min-w-0 flex-1 text-gray-500 font-sofiapro-light'>{price.name}</label>\n                                          </div>\n                                      )\n                                  } else {\n                                      return (\n                                          <div key={index} className='form-check'>\n                                              <input\n                                                  onChange={e => onChange(e)}\n                                                  value={price.name}\n                                                  name='price_range'\n                                                  type='radio'\n                                                  className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                              />\n                                              <label className='ml-3 min-w-0 flex-1 text-gray-500 font-sofiapro-light'>{price.name}</label>\n                                          </div>\n                                      )\n                                  }\n                              })\n                          }\n                        </div>\n                      </Disclosure.Panel>\n\n                      \n\n                    </h3>\n                    </>\n                  )}\n                  </Disclosure>\n\n                  <Disclosure as=\"div\" className=\"border-t border-gray-200 px-4 py-6\">\n                  {({ open }) => (\n                    <>\n                    <h3 className=\"-mx-2 -my-3 flow-root\">\n                      <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                        <span className=\"font-sofiapro-regular text-gray-900\">Mas Filtros</span>\n                        <span className=\"ml-6 flex items-center\">\n                          {open ? (\n                            <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          ) : (\n                            <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          )}\n                        </span>\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"pt-6\">\n                        <div className=\"space-y-6\">\n                          <div className='form-group '>\n                              <label htmlFor='sortBy' className='mr-3 min-w-0 flex-1 text-gray-500'\n                              >Ver por</label>\n                                <select\n                                    className='my-2 font-sofiapro-light inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500'\n                                    id='sortBy'\n                                    name='sortBy'\n                                    onChange={e => onChange(e)}\n                                    value={sortBy}\n                                >\n                                  <option value='date_created'>Fecha</option>\n                                  <option value='price'>Precio</option>\n                                  <option value='sold'>Sold</option>\n                                  <option value='title'>Nombre</option>\n\n                                </select>\n                          </div>\n                          <div className='form-group'>\n                              <label htmlFor='order' className='mr-3 min-w-0 flex-1 text-gray-500'\n                              >Orden</label>\n                              <select\n                                  className='my-2 font-sofiapro-light inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500'\n                                  id='order'\n                                  name='order'\n                                  onChange={e => onChange(e)}\n                                  value={order}\n                              >\n                                  <option value='asc'>A - Z</option>\n                                  <option value='desc'>Z - A</option>\n                              </select>\n                          </div>\n                        </div>\n                      </Disclosure.Panel>\n                    </h3>\n                    </>\n                  )}\n                  </Disclosure>\n\n                  <button\n                    type=\"submit\"\n                    className=\"float-right inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    Buscar\n                  </button>\n              </form>\n\n              {/* Product grid */}\n              <div className=\"lg:col-span-3\">\n                {/* Replace with your content */}\n\n                {products && showProducts()}\n\n              </div>\n            </div>\n          </section>\n        </main>\n      </div>\n    </div>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => ({\n    categories: state.Categories.categories,\n    products: state.Products.products,\n    filtered_products: state.Products.filtered_products\n})\n\nexport default connect(mapStateToProps,{\n    get_categories,\n    get_products,\n    get_filtered_products\n}) (Shop)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\productDetail.jsx",["342","343","344","345","346"],"import Layout from \"../../hocs/Layout\"\nimport {useParams} from 'react-router'\nimport { connect } from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport { \n  add_wishlist_item, \n  get_wishlist_items, \n  get_wishlist_item_total ,\n  remove_wishlist_item\n} from '../../redux/actions/wishlist';\nimport { \n    get_product,\n    get_related_products \n} from \"../../redux/actions/products\";\nimport {\n  get_reviews,\n  get_review,\n  create_review,\n  update_review,\n  delete_review,\n  filter_reviews\n} from '../../redux/actions/reviews';\nimport Loader from \"react-loader-spinner\";\nimport { \n    get_items,\n    add_item,\n    get_total,\n    get_item_total\n} from \"../../redux/actions/cart\";\nimport { useEffect, useState } from \"react\";\nimport ImageGallery from \"../../components/product/ImageGallery\";\nimport WishlistHeart from \"../../components/product/WishlistHeart\";\nimport { Navigate } from \"react-router\";\n\nimport Stars from '../../components/product/Stars'\n\nconst ProductDetail =({\n    get_product,\n    get_related_products,\n    product,\n    get_items,\n    add_item,\n    get_total,\n    get_item_total,\n    add_wishlist_item, \n    get_wishlist_items, \n    get_wishlist_item_total,\n    isAuthenticated,\n    remove_wishlist_item,\n    wishlist,\n    get_reviews,\n    get_review,\n    create_review,\n    update_review,\n    delete_review,\n    filter_reviews,\n    review,\n    reviews\n})=>{\n\n    const [loading, setLoading] = useState(false);\n\n    const navigate = useNavigate();\n\n    const addToCart = async () => {\n      if (product && product !== null && product !== undefined && product.quantity > 0) {\n          setLoading(true)\n          await add_item(product);\n          await get_items();\n          await get_total();\n          await get_item_total();\n          setLoading(false)\n          navigate('/cart')\n      }\n    }\n\n    const addToWishlist = async () => {\n      if (isAuthenticated) {\n        let isPresent = false;\n        if(\n          wishlist &&\n          wishlist !== null &&\n          wishlist !== undefined &&\n          product &&\n          product !== null &&\n          product !== undefined\n          ){\n            wishlist.map(item => {\n                if (item.product.id.toString() === product.id.toString()) {\n                    isPresent = true;\n                }\n            });\n        }\n        \n        if (isPresent) {\n          await remove_wishlist_item(product.id);\n          await get_wishlist_items();\n          await get_wishlist_item_total();\n        } else {\n          await remove_wishlist_item(product.id);\n            await add_wishlist_item(product.id);\n            await get_wishlist_items();\n            await get_wishlist_item_total();\n            await get_items();\n            await get_total();\n            await get_item_total();\n        }\n          \n      } else {\n        return <Navigate to=\"/cart\"/>\n      }\n    };\n\n    \n    const params = useParams()\n    const productId = params.productId\n\n    useEffect(() => {\n      window.scrollTo(0,0)\n        get_product(productId)\n        get_related_products(productId)\n        get_wishlist_items()\n        get_wishlist_item_total()\n    }, [])\n\n    useEffect(() => {\n        get_reviews(productId);\n    }, [productId]);\n\n    useEffect(() => {\n        get_review(productId);\n    }, [productId]);\n\n    // const [rating, setRating] = useState(5.0);\n\n    const [formData, setFormData] = useState({\n      comment:'',\n      rating:'',\n    })\n\n    const { comment,rating } = formData\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const leaveReview = e => {\n      e.preventDefault()\n      if (rating !== null)\n        create_review(productId, rating, comment);\n    }\n    \n    const updateReview = e => {\n      e.preventDefault()\n      if (rating !== null)\n        update_review(productId, rating, comment);\n    }\n\n    const deleteReview = () => {\n      const fetchData = async () => {\n          await delete_review(productId);\n          await get_review(productId);\n          // setRating(5.0);\n          setFormData({\n              comment: ''\n          });\n      };\n      fetchData();\n    };\n\n    const filterReviews = numStars => {\n        filter_reviews(productId, numStars);\n    };\n\n    const getReviews = () => {\n        get_reviews(productId);\n    };\n\n    return(\n        <Layout>\n            <div className=\"bg-white\">\n      <div className=\"max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8\">\n        <div className=\"lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-start\">\n          <ImageGallery photo={product && product.photo}/>\n\n          {/* Product info */}\n          <div className=\"mt-10 px-4 sm:px-0 sm:mt-16 lg:mt-0\">\n            <h1 className=\"text-3xl font-extrabold tracking-tight text-gray-900\">{product && product.name}</h1>\n\n            <div className=\"mt-3\">\n              <h2 className=\"sr-only\">Product information</h2>\n              <p className=\"text-3xl text-gray-900\">$ {product && product.price}</p>\n            </div>\n            \n            <div className=\"mt-6\">\n              <h3 className=\"sr-only\">Description</h3>\n              <div\n                className=\"text-base text-gray-700 space-y-6\"\n                dangerouslySetInnerHTML={{ __html: product && product.description }}\n              />\n            </div>\n\n            <div className=\"mt-6\">\n              <div>\n                <h3 className=\"text-sm text-gray-600\">Color</h3>\n\n                <fieldset className=\"mt-2\">\n                  <legend className=\"sr-only\">\n                    Choose a color\n                  </legend>\n                  <div className=\"flex items-center space-x-3\">\n                    \n                    <label className=\"-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none ring-gray-700\">\n                      <input type=\"radio\" name=\"color-choice\" value=\"Washed Black\" className=\"sr-only\" aria-labelledby=\"color-choice-0-label\"/>\n                      <p id=\"color-choice-0-label\" className=\"sr-only\">\n                        Washed Black\n                      </p>\n                      <span aria-hidden=\"true\" className=\"h-8 w-8 bg-gray-700 border border-black border-opacity-10 rounded-full\"></span>\n                    </label>\n\n                    <label className=\"-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none ring-gray-400\">\n                      <input type=\"radio\" name=\"color-choice\" value=\"White\" className=\"sr-only\" aria-labelledby=\"color-choice-1-label\"/>\n                      <p id=\"color-choice-1-label\" className=\"sr-only\">\n                        White\n                      </p>\n                      <span aria-hidden=\"true\" className=\"h-8 w-8 bg-white border border-black border-opacity-10 rounded-full\"></span>\n                    </label>\n\n                    \n                    <label className=\"-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none ring-gray-500\">\n                      <input type=\"radio\" name=\"color-choice\" value=\"Washed Gray\" className=\"sr-only\" aria-labelledby=\"color-choice-2-label\"/>\n                      <p id=\"color-choice-2-label\" className=\"sr-only\">\n                        Washed Gray\n                      </p>\n                      <span aria-hidden=\"true\" className=\"h-8 w-8 bg-gray-500 border border-black border-opacity-10 rounded-full\"></span>\n                    </label>\n                  </div>\n                </fieldset>\n              </div>\n\n              <p className=\"mt-4\">\n                  {\n                      product && \n                      product !== null &&\n                      product !== undefined && \n                      product.quantity > 0 ? (\n                          <span className='text-green-500'>\n                              In Stock\n                          </span>\n                      ) : (\n                          <span className='text-red-500'>\n                              Out of Stock\n                          </span>\n                      )\n                  }\n              </p>\n\n              <div className=\"mt-4 flex sm:flex-col1\">\n                {loading?<button \n                  className=\"max-w-xs flex-1 bg-indigo-600 border border-transparent rounded-md py-3 px-8 flex items-center justify-center text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500 sm:w-full\">\n                    <Loader\n                    type=\"Oval\"\n                    color=\"#fff\"\n                    width={20}\n                    height={20}/>\n                </button>:\n                <button \n                onClick={addToCart}\n                className=\"max-w-xs flex-1 bg-indigo-600 border border-transparent rounded-md py-3 px-8 flex items-center justify-center text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500 sm:w-full\">\n                  Agregar al Carrito\n              </button>}\n\n                <WishlistHeart \n                product={product}\n                wishlist={wishlist}\n                addToWishlist={addToWishlist}\n                />\n\n              </div>\n            </div>\n          </div>\n          <section className='my-5 max-w-7xl'>\n            <div className=\"grid grid-cols-5\">\n                  <div className=\"col-span-2\">\n                    <div>\n                      \n                      <button\n                          className='btn btn-primary btn-sm mb-3 ml-6 mt-2 font-sofiapro-light'\n                          onClick={getReviews}\n                      >\n                          Mostrar todas\n                      </button>\n                        <div\n                            className='mb-1'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => filterReviews(5)}\n                        >\n                            <Stars rating={5.0} />\n                        </div>\n                        <div\n                            className='mb-1'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => filterReviews(4.0)}\n                        >\n                            <Stars rating={4.0} />\n                        </div>\n                        <div\n                            className='mb-1'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => filterReviews(3.0)}\n                        >\n                            <Stars rating={3.0} />\n                        </div>\n                        <div\n                            className='mb-1'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => filterReviews(2.0)}\n                        >\n                            <Stars rating={2.0} />\n                        </div>\n                        <div\n                            className='mb-1'\n                            style={{ cursor: 'pointer' }}\n                            onClick={() => filterReviews(1.0)}\n                        >\n                            <Stars rating={1.0} />\n                        </div>\n                    </div>\n                    {\n                      review && isAuthenticated ? \n                      <form onSubmit={e => updateReview(e)}>\n                      <div>\n                        <label htmlFor=\"comment\" className=\"block text-sm font-medium text-gray-700\">\n                          Add your review\n                        </label>\n                        <div className=\"mt-1\">\n                          <textarea\n                            rows={4}\n                            name=\"comment\"\n                            id=\"comment\"\n                            required\n                            value={comment}\n                            onChange={e=>onChange(e)}\n                            placeholder={review.comment}\n                            className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                            defaultValue={''}\n                          />\n                        </div>\n                      </div>\n                      <select\n                          name=\"rating\"\n                          className=\"mt-4 float-right\"\n                          required\n                          value={rating}\n                          onChange={e=>onChange(e)}\n                          placeholder=\"0 - 5\">\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                      </select>\n                      <button\n                        type=\"submit\"\n                        className=\"mt-4  inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                      >\n                        Update\n                      </button>\n                      </form>:\n\n                      <form onSubmit={e => leaveReview(e)}>\n                      \n                      <div>\n                        <label htmlFor=\"comment\" className=\"block text-sm font-medium text-gray-700\">\n                          Add your review\n                        </label>\n                        <div className=\"mt-1\">\n                          <textarea\n                            rows={4}\n                            name=\"comment\"\n                            id=\"comment\"\n                            required\n                            value={comment}\n                            onChange={e=>onChange(e)}\n                            className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                            defaultValue={''}\n                          />\n                        </div>\n                      </div>\n                      <select\n                          name=\"rating\"\n                          className=\"mt-4 float-right\"\n                          required\n                          value={rating}\n                          onChange={e=>onChange(e)}\n                          placeholder=\"0 - 5\">\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                      </select>\n                      <button\n                        type=\"submit\"\n                        className=\"mt-4  inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                      >\n                        Add\n                      </button>\n                      </form>\n                    }\n                  </div>\n                  <div className=\"col-span-3\">\n                    {reviews && reviews.map((review,index)=>(\n                      <>\n                      <div className=\"flex\">\n                        <div className=\"mx-4 flex-shrink-0\">\n                        <span className=\"inline-block h-10 w-10 rounded-full overflow-hidden bg-gray-100\">\n                          <svg className=\"h-full w-full text-gray-300\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path d=\"M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z\" />\n                          </svg>\n                        </span>\n                        </div>\n                        <div>\n                          <Stars rating={review.rating}/>\n                          <h4 className=\"text-lg font-bold\">{review.user}</h4>\n                          <p className=\"mt-1\">\n                            {review.comment}\n                          </p>\n                        </div>\n                      </div>\n                      </>\n                    ))}\n                  </div>\n\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = state => ({\n    product: state.Products.product,\n    isAuthenticated: state.Auth.isAuthenticated,\n    wishlist: state.Wishlist.wishlist,\n    review: state.Reviews.review,\n    reviews: state.Reviews.reviews\n})\n\nexport default connect(mapStateToProps, {\n    get_product,\n    get_related_products,\n    get_items,\n    add_item,\n    get_total,\n    get_item_total,\n    add_wishlist_item, \n    get_wishlist_items, \n    get_wishlist_item_total,\n    remove_wishlist_item,\n    get_reviews,\n    get_review,\n    create_review,\n    update_review,\n    delete_review,\n    filter_reviews\n}) (ProductDetail)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\Cart.jsx",["347","348","349"],"import Layout from \"../../hocs/Layout\"\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\"\nimport { setAlert } from \"../../redux/actions/alert\";\nimport {\n    remove_item,\n    update_item,\n    get_items,\n    get_total,\n    get_item_total\n} from \"../../redux/actions/cart\";\nimport {\n    remove_wishlist_item,\n} from \"../../redux/actions/wishlist\";\nimport { useEffect } from \"react\";\nimport CartItem from \"../../components/cart/CartItem\";\nimport { Link } from \"react-router-dom\";\nimport { QuestionMarkCircleIcon } from '@heroicons/react/solid'\nimport WishlistItem from \"../../components/cart/WishlistItem\";\n\n\nconst Cart = ({\n    get_items,\n    get_total,\n    get_item_total,\n    isAuthenticated,\n    items,\n    amount,\n    compare_amount,\n    total_items,\n    remove_item,\n    update_item,\n    setAlert,\n    wishlist_items,\n    remove_wishlist_item\n}) => {\n\n    const [render, setRender] = useState(false);\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        get_items()\n        get_total()\n        get_item_total()\n    }, [render])\n\n    const showItems = () => {\n        return(\n            <div>\n                {\n                    items && \n                    items !== null && \n                    items !== undefined && \n                    items.length !== 0 && \n                    items.map((item, index)=>{\n                        let count = item.count;\n                        return (\n                            <div key={index}>\n                                <CartItem \n                                    item={item}\n                                    count={count}\n                                    update_item={update_item}\n                                    remove_item={remove_item}\n                                    render={render}\n                                    setRender={setRender}\n                                    setAlert={setAlert}\n                                />\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        )\n    }\n\n    const showWishlistItems = () => {\n      return(\n          <div>\n              {\n                  wishlist_items && \n                  wishlist_items !== null && \n                  wishlist_items !== undefined && \n                  wishlist_items.length !== 0 && \n                  wishlist_items.map((item, index)=>{\n                      let count = item.count;\n                      return (\n                          <div key={index}>\n                              <WishlistItem \n                                  item={item}\n                                  count={count}\n                                  update_item={update_item}\n                                  remove_wishlist_item={remove_wishlist_item}\n                                  render={render}\n                                  setRender={setRender}\n                                  setAlert={setAlert}\n                              />\n                          </div>\n                      );\n                  })\n              }\n          </div>\n      )\n  }\n\n    const checkoutButton = () => {\n        if (total_items < 1) {\n            return(\n                <>\n                <Link\n                to='/shop'\n                \n            >\n                <button\n                className=\"w-full bg-indigo-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\"\n            >\n                Buscar items\n                </button>\n            </Link>\n            </>\n            )\n        } else if (!isAuthenticated) {\n            return(<>\n            <Link\n                to='/login'\n                \n            >\n                <button\n                className=\"w-full bg-indigo-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\"\n            >\n                Login\n                </button>\n            </Link>\n            </>)\n            \n        } else {\n            return(\n                <>\n                <Link\n                to='/checkout'>\n                 <button\n                className=\"w-full bg-indigo-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\"\n            >\n                Checkout\n                </button>\n            </Link>\n                </>\n            )\n           \n        }\n    }\n\n    \n\n    return (\n        <Layout>\n            <div className=\"bg-white\">\n      <div className=\"max-w-2xl mx-auto pt-16 pb-24 px-4 sm:px-6 lg:max-w-7xl lg:px-8\">\n        <h1 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Shopping Cart Items ({total_items})</h1>\n        <div className=\"mt-12 lg:grid lg:grid-cols-12 lg:gap-x-12 lg:items-start xl:gap-x-16\">\n          <section aria-labelledby=\"cart-heading\" className=\"lg:col-span-7\">\n            <h2 id=\"cart-heading\" className=\"sr-only\">\n              Items in your shopping cart\n            </h2>\n\n            <ul className=\"border-t border-b border-gray-200 divide-y divide-gray-200\">\n              {showItems()}\n            </ul>\n          </section>\n\n          {/* Order summary */}\n          <section\n            aria-labelledby=\"summary-heading\"\n            className=\"mt-16 bg-gray-50 rounded-lg px-4 py-6 sm:p-6 lg:p-8 lg:mt-0 lg:col-span-5\"\n          >\n            <h2 id=\"summary-heading\" className=\"text-lg font-medium text-gray-900\">\n              Order summary\n            </h2>\n\n            <dl className=\"mt-6 space-y-4\">\n\n              <div className=\"flex items-center justify-between\">\n                <dt className=\"text-sm text-gray-600\">Subtotal</dt>\n                <dd className=\"text-sm font-medium text-gray-900\">${compare_amount.toFixed(2)}</dd>\n              </div>\n\n              <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n                <dt className=\"flex items-center text-sm text-gray-600\">\n                  <span>Shipping estimate</span>\n                  <a href=\"#\" className=\"ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500\">\n                    <span className=\"sr-only\">Learn more about how shipping is calculated</span>\n                    <QuestionMarkCircleIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                  </a>\n                </dt>\n                <dd className=\"text-sm font-medium text-gray-900\">$5.00</dd>\n              </div>\n\n              <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n                <dt className=\"flex text-sm text-gray-600\">\n                  <span>Tax estimate</span>\n                  <a href=\"#\" className=\"ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500\">\n                    <span className=\"sr-only\">Learn more about how tax is calculated</span>\n                    <QuestionMarkCircleIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                  </a>\n                </dt>\n                <dd className=\"text-sm font-medium text-gray-900\">$8.32</dd>\n              </div>\n\n              <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n                <dt className=\"text-base font-medium text-gray-900\">Order total</dt>\n                <dd className=\"text-base font-medium text-gray-900\">${amount.toFixed(2)}</dd>\n              </div>\n            </dl>\n\n            <div className=\"mt-6\">\n              {checkoutButton()}\n            </div>\n          </section>\n        </div>\n        \n        {showWishlistItems()}\n\n      </div>\n    </div>\n        </Layout>\n    )\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.Auth.isAuthenticated,\n    items: state.Cart.items,\n    wishlist_items: state.Wishlist.items,\n    amount: state.Cart.amount,\n    compare_amount: state.Cart.compare_amount,\n    total_items: state.Cart.total_items\n})\n\nexport default connect(mapStateToProps,{\n    get_items,\n    get_total,\n    get_item_total,\n    remove_item,\n    update_item,\n    setAlert,\n    remove_wishlist_item\n}) (Cart)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\Search.jsx",["350","351","352","353","354","355","356","357","358","359","360","361","362","363"],"import Layout from '../../hocs/Layout'\nimport { Fragment, useState, useEffect } from 'react'\nimport { Dialog, Disclosure, Menu, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { ChevronDownIcon, FilterIcon, MinusSmIcon, PlusSmIcon, ViewGridIcon } from '@heroicons/react/solid'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {get_categories} from '../../redux/actions/categories'\nimport {get_products, get_filtered_products} from '../../redux/actions/products'\nimport ProductCard from '../../components/product/ProductCard'\nimport { prices } from '../../helpers/fixedPrices'\nimport Navbar from '../../components/navigation/Navbar'\nimport Footer from '../../components/navigation/Footer'\nconst sortOptions = [\n  { name: 'Most Popular', href: '#', current: true },\n  { name: 'Best Rating', href: '#', current: false },\n  { name: 'Newest', href: '#', current: false },\n  { name: 'Price: Low to High', href: '#', current: false },\n  { name: 'Price: High to Low', href: '#', current: false },\n]\nconst subCategories = [\n  { name: 'Totes', href: '#' },\n  { name: 'Backpacks', href: '#' },\n  { name: 'Travel Bags', href: '#' },\n  { name: 'Hip Bags', href: '#' },\n  { name: 'Laptop Sleeves', href: '#' },\n]\nconst filters = [\n  {\n    id: 'color',\n    name: 'Color',\n    options: [\n      { value: 'white', label: 'White', checked: false },\n      { value: 'beige', label: 'Beige', checked: false },\n      { value: 'blue', label: 'Blue', checked: true },\n      { value: 'brown', label: 'Brown', checked: false },\n      { value: 'green', label: 'Green', checked: false },\n      { value: 'purple', label: 'Purple', checked: false },\n    ],\n  },\n  {\n    id: 'category',\n    name: 'Category',\n    options: [\n      { value: 'new-arrivals', label: 'New Arrivals', checked: false },\n      { value: 'sale', label: 'Sale', checked: false },\n      { value: 'travel', label: 'Travel', checked: true },\n      { value: 'organization', label: 'Organization', checked: false },\n      { value: 'accessories', label: 'Accessories', checked: false },\n    ],\n  },\n  {\n    id: 'size',\n    name: 'Size',\n    options: [\n      { value: '2l', label: '2L', checked: false },\n      { value: '6l', label: '6L', checked: false },\n      { value: '12l', label: '12L', checked: false },\n      { value: '18l', label: '18L', checked: false },\n      { value: '20l', label: '20L', checked: false },\n      { value: '40l', label: '40L', checked: true },\n    ],\n  },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nconst Search = ({\n    get_categories,\n    categories,\n    get_products,\n    products,\n    get_filtered_products,\n    searched_products,\n    filtered_products\n}) => {\n    const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false)\n    const [filtered, setFiltered] = useState(false)\n    const [formData, setFormData] = useState({\n      category_id: '0',\n      price_range: 'Any',\n      sortBy: 'created',\n      order: 'desc'\n    })\n\n    const { \n      category_id,\n      price_range,\n      sortBy,\n      order\n    } = formData\n\n    useEffect(() => {\n        get_categories()\n        get_products()\n        window.scrollTo(0,0)\n    }, [])\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = e => {\n      e.preventDefault()\n      get_filtered_products(category_id, price_range, sortBy , order)\n      setFiltered(true)\n    }\n\n    const showProducts = () => {\n      let results = []\n      let display = []\n\n      if (\n        filtered_products &&\n        filtered_products !== null &&\n        filtered_products !== undefined &&\n        filtered\n      ) {\n        filtered_products.map((product, index) => {\n            return display.push(\n                <div key={index}>\n                    <ProductCard product={product}/>\n                </div>\n            );\n        });\n      } else if (\n        searched_products &&\n        searched_products !== null &&\n        searched_products !== undefined\n      ) {\n        searched_products.map((product, index) => {\n            return display.push(\n                <div key={index}>\n                    <ProductCard product={product}/>\n                </div>\n            );\n        });\n      } \n\n      for (let i = 0; i < display.length; i += 3) {\n        results.push(\n          <div key={i} className='grid md:grid-cols-3 '>\n              {display[i] ? display[i] : <div className=''></div>}\n              {display[i+1] ? display[i+1] : <div className=''></div>}\n              {display[i+2] ? display[i+2] : <div className=''></div>}\n          </div>\n        )\n      }\n\n      return results\n\n    }\n\n\n\n    return (\n        <div>\n            <Navbar/>\n            <div className=\"bg-white\">\n      <div>\n        {/* Mobile filter dialog */}\n        <Transition.Root show={mobileFiltersOpen} as={Fragment}>\n          <Dialog as=\"div\" className=\"fixed inset-0 flex z-40 lg:hidden\" onClose={setMobileFiltersOpen}>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-black bg-opacity-25\" />\n            </Transition.Child>\n\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"translate-x-full\"\n            >\n              <div className=\"ml-auto relative max-w-xs w-full h-full bg-white shadow-xl py-4 pb-12 flex flex-col overflow-y-auto\">\n                <div className=\"px-4 flex items-center justify-between\">\n                  <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\n                  <button\n                    type=\"button\"\n                    className=\"-mr-2 w-10 h-10 bg-white p-2 rounded-md flex items-center justify-center text-gray-400\"\n                    onClick={() => setMobileFiltersOpen(false)}\n                  >\n                    <span className=\"sr-only\">Close menu</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n\n                {/* MOBILE FILTERS */}\n                <form onSubmit={e => onSubmit(e)} className=\"mt-4 border-t border-gray-200\">\n                  <h3 className=\"sr-only\">Categories</h3>\n                  <ul role=\"list\" className=\"font-medium text-gray-900 px-2 py-3\">\n                    {\n                        categories &&\n                        categories !== null &&\n                        categories !== undefined &&\n                        categories.map(category => {\n                            if (category.sub_categories.length === 0){\n                                return (\n                                    <div key={category.id} className=' flex items-center h-5 my-5'>\n                                        <input\n                                            name='category_id'\n                                            onChange={e => onChange(e)}\n                                            value={category.id.toString()}\n                                            type='radio'\n                                            className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                        />\n                                        <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                            {category.name}\n                                        </label>\n                                    </div>\n                                )\n                            } else {\n                                let result = []\n                                result.push(\n                                    <div key={category.id} className='flex items-center h-5'>\n                                        <input\n                                            name='category_id'\n                                            onChange={e => onChange(e)}\n                                            value={category.id.toString()}\n                                            type='radio'\n                                            className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                        />\n                                        <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                            {category.name}\n                                        </label>\n                                    </div>\n                                )\n\n                                category.sub_categories.map(sub_category => {\n                                    result.push(\n                                        <div key={sub_category.id} className='flex items-center h-5 ml-2 my-5'>\n                                            <input\n                                                name='category_id'\n                                                onChange={e => onChange(e)}\n                                                value={sub_category.id.toString()}\n                                                type='radio'\n                                                className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                            />\n                                            <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                                {sub_category.name}\n                                            </label>\n                                        </div>\n                                    )\n                                })\n\n                                return result\n                            }\n                        })\n                    }\n                  </ul>\n\n                  <Disclosure as=\"div\" className=\"border-t border-gray-200 px-4 py-6\">\n                  {({ open }) => (\n                    <>\n                    <h3 className=\"-mx-2 -my-3 flow-root\">\n                      <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                        <span className=\"font-sofiapro-regular text-gray-900\">Prices</span>\n                        <span className=\"ml-6 flex items-center\">\n                          {open ? (\n                            <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          ) : (\n                            <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          )}\n                        </span>\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"pt-6\">\n                        <div className=\"space-y-6\">\n                          {\n                              prices && prices.map((price, index) => {\n                                  if (price.id === 0) {\n                                      return (\n                                          <div key={index} className='form-check'>\n                                              <input\n                                                  onChange={e => onChange(e)}\n                                                  value={price.name}\n                                                  name='price_range'\n                                                  type='radio'\n                                                  className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                                  defaultChecked\n                                              />\n                                              <label className='ml-3 min-w-0 flex-1 text-gray-500 font-sofiapro-light'>{price.name}</label>\n                                          </div>\n                                      )\n                                  } else {\n                                      return (\n                                          <div key={index} className='form-check'>\n                                              <input\n                                                  onChange={e => onChange(e)}\n                                                  value={price.name}\n                                                  name='price_range'\n                                                  type='radio'\n                                                  className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                              />\n                                              <label className='ml-3 min-w-0 flex-1 text-gray-500 font-sofiapro-light'>{price.name}</label>\n                                          </div>\n                                      )\n                                  }\n                              })\n                          }\n                        </div>\n                      </Disclosure.Panel>\n\n                      \n\n                    </h3>\n                    </>\n                  )}\n                  </Disclosure>\n\n                  <Disclosure as=\"div\" className=\"border-t border-gray-200 px-4 py-6\">\n                  {({ open }) => (\n                    <>\n                    <h3 className=\"-mx-2 -my-3 flow-root\">\n                      <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                        <span className=\"font-sofiapro-regular text-gray-900\">Mas Filtros</span>\n                        <span className=\"ml-6 flex items-center\">\n                          {open ? (\n                            <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          ) : (\n                            <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          )}\n                        </span>\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"pt-6\">\n                        <div className=\"space-y-6\">\n                          <div className='form-group '>\n                              <label htmlFor='sortBy' className='mr-3 min-w-0 flex-1 text-gray-500'\n                              >Ver por</label>\n                                <select\n                                    className='my-2 font-sofiapro-light inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500'\n                                    id='sortBy'\n                                    name='sortBy'\n                                    onChange={e => onChange(e)}\n                                    value={sortBy}\n                                >\n                                  <option value='date_created'>Fecha</option>\n                                  <option value='price'>Precio</option>\n                                  <option value='sold'>Sold</option>\n                                  <option value='title'>Nombre</option>\n\n                                </select>\n                          </div>\n                          <div className='form-group'>\n                              <label htmlFor='order' className='mr-3 min-w-0 flex-1 text-gray-500'\n                              >Orden</label>\n                              <select\n                                  className='my-2 font-sofiapro-light inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500'\n                                  id='order'\n                                  name='order'\n                                  onChange={e => onChange(e)}\n                                  value={order}\n                              >\n                                  <option value='asc'>A - Z</option>\n                                  <option value='desc'>Z - A</option>\n                              </select>\n                          </div>\n                        </div>\n                      </Disclosure.Panel>\n                    </h3>\n                    </>\n                  )}\n                  </Disclosure>\n\n                  <button\n        type=\"submit\"\n        className=\"float-right inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        Buscar\n      </button>\n\n\n                </form>\n              </div>\n            </Transition.Child>\n          </Dialog>\n        </Transition.Root>\n\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"relative z-10 flex items-baseline justify-between pt-24 pb-6 border-b border-gray-200\">\n            <h1 className=\"text-4xl font-extrabold tracking-tight text-gray-900\">Productos \n             ({searched_products &&\n                searched_products !== null &&\n                searched_products !== undefined &&\n                searched_products.length})</h1>\n\n            <div className=\"flex items-center\">\n              <button\n                type=\"button\"\n                className=\"p-2 -m-2 ml-4 sm:ml-6 text-gray-400 hover:text-gray-500 lg:hidden\"\n                onClick={() => setMobileFiltersOpen(true)}\n              >\n                <span className=\"sr-only\">Filters</span>\n                <FilterIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </div>\n\n          <section aria-labelledby=\"products-heading\" className=\"pt-6 pb-24\">\n            <h2 id=\"products-heading\" className=\"sr-only\">\n              Products\n            </h2>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-x-8 gap-y-10\">\n              {/* Filters */}\n              <form onSubmit={e=>onSubmit(e)} className=\"hidden lg:block\">\n                <h3 className=\"sr-only\">Categories</h3>\n                <ul role=\"list\" className=\"text-sm font-medium text-gray-900 space-y-4 pb-6 border-b border-gray-200\">\n                {\n                        categories &&\n                        categories !== null &&\n                        categories !== undefined &&\n                        categories.map(category => {\n                            if (category.sub_categories.length === 0){\n                                return (\n                                    <div key={category.id} className=' flex items-center h-5 my-5'>\n                                        <input\n                                            name='category_id'\n                                            type='radio'\n                                            className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                        />\n                                        <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                            {category.name}\n                                        </label>\n                                    </div>\n                                )\n                            } else {\n                                let result = []\n                                result.push(\n                                    <div key={category.id} className='flex items-center h-5'>\n                                        <input\n                                            name='category_id'\n                                            type='radio'\n                                            className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                        />\n                                        <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                            {category.name}\n                                        </label>\n                                    </div>\n                                )\n\n                                category.sub_categories.map(sub_category => {\n                                    result.push(\n                                        <div key={sub_category.id} className='flex items-center h-5 ml-2 my-5'>\n                                            <input\n                                                name='category_id'\n                                                type='radio'\n                                                className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                            />\n                                            <label className=\"ml-3 min-w-0 flex-1 text-gray-500\">\n                                                {sub_category.name}\n                                            </label>\n                                        </div>\n                                    )\n                                })\n\n                                return result\n                            }\n                        })\n                    }\n                </ul>\n\n                <Disclosure as=\"div\" className=\"border-t border-gray-200 px-4 py-6\">\n                  {({ open }) => (\n                    <>\n                    <h3 className=\"-mx-2 -my-3 flow-root\">\n                      <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                        <span className=\"font-sofiapro-regular text-gray-900\">Prices</span>\n                        <span className=\"ml-6 flex items-center\">\n                          {open ? (\n                            <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          ) : (\n                            <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          )}\n                        </span>\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"pt-6\">\n                        <div className=\"space-y-6\">\n                          {\n                              prices && prices.map((price, index) => {\n                                  if (price.id === 0) {\n                                      return (\n                                          <div key={index} className='form-check'>\n                                              <input\n                                                  onChange={e => onChange(e)}\n                                                  value={price.name}\n                                                  name='price_range'\n                                                  type='radio'\n                                                  className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                                  defaultChecked\n                                              />\n                                              <label className='ml-3 min-w-0 flex-1 text-gray-500 font-sofiapro-light'>{price.name}</label>\n                                          </div>\n                                      )\n                                  } else {\n                                      return (\n                                          <div key={index} className='form-check'>\n                                              <input\n                                                  onChange={e => onChange(e)}\n                                                  value={price.name}\n                                                  name='price_range'\n                                                  type='radio'\n                                                  className='focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded-full'\n                                              />\n                                              <label className='ml-3 min-w-0 flex-1 text-gray-500 font-sofiapro-light'>{price.name}</label>\n                                          </div>\n                                      )\n                                  }\n                              })\n                          }\n                        </div>\n                      </Disclosure.Panel>\n\n                      \n\n                    </h3>\n                    </>\n                  )}\n                  </Disclosure>\n\n                  <Disclosure as=\"div\" className=\"border-t border-gray-200 px-4 py-6\">\n                  {({ open }) => (\n                    <>\n                    <h3 className=\"-mx-2 -my-3 flow-root\">\n                      <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                        <span className=\"font-sofiapro-regular text-gray-900\">Mas Filtros</span>\n                        <span className=\"ml-6 flex items-center\">\n                          {open ? (\n                            <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          ) : (\n                            <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          )}\n                        </span>\n                      </Disclosure.Button>\n                      <Disclosure.Panel className=\"pt-6\">\n                        <div className=\"space-y-6\">\n                          <div className='form-group '>\n                              <label htmlFor='sortBy' className='mr-3 min-w-0 flex-1 text-gray-500'\n                              >Ver por</label>\n                                <select\n                                    className='my-2 font-sofiapro-light inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500'\n                                    id='sortBy'\n                                    name='sortBy'\n                                    onChange={e => onChange(e)}\n                                    value={sortBy}\n                                >\n                                  <option value='date_created'>Fecha</option>\n                                  <option value='price'>Precio</option>\n                                  <option value='sold'>Sold</option>\n                                  <option value='title'>Nombre</option>\n\n                                </select>\n                          </div>\n                          <div className='form-group'>\n                              <label htmlFor='order' className='mr-3 min-w-0 flex-1 text-gray-500'\n                              >Orden</label>\n                              <select\n                                  className='my-2 font-sofiapro-light inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500'\n                                  id='order'\n                                  name='order'\n                                  onChange={e => onChange(e)}\n                                  value={order}\n                              >\n                                  <option value='asc'>A - Z</option>\n                                  <option value='desc'>Z - A</option>\n                              </select>\n                          </div>\n                        </div>\n                      </Disclosure.Panel>\n                    </h3>\n                    </>\n                  )}\n                  </Disclosure>\n\n                  <button\n                    type=\"submit\"\n                    className=\"float-right inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    Buscar\n                  </button>\n              </form>\n\n              {/* Product grid */}\n              <div className=\"lg:col-span-3\">\n                {/* Replace with your content */}\n\n                {products && showProducts()}\n\n              </div>\n            </div>\n          </section>\n        </main>\n      </div>\n    </div>\n    <Footer/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    categories: state.Categories.categories,\n    products: state.Products.products,\n    searched_products: state.Products.search_products,\n    filtered_products: state.Products.filtered_products\n})\n\nexport default connect(mapStateToProps,{\n    get_categories,\n    get_products,\n    get_filtered_products\n}) (Search)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\Checkout.jsx",["364","365","366","367"],"import Layout from '../../hocs/Layout'\nimport { Navigate } from 'react-router'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport CartItem from '../../components/cart/CartItem'\nimport { setAlert } from '../../redux/actions/alert'\nimport { update_item, remove_item } from '../../redux/actions/cart'\nimport { useEffect, useState } from 'react'\nimport {get_shipping_options} from '../../redux/actions/shipping'\nimport {check_coupon} from '../../redux/actions/coupons'\nimport {\n  refresh\n} from '../../redux/actions/auth';\n\nimport {\n  get_payment_total,\n  get_client_token,\n  process_payment\n} from '../../redux/actions/payment';\n\nimport DropIn from 'braintree-web-drop-in-react';\nimport Loader from 'react-loader-spinner';\nimport {countries} from '../../helpers/fixedCountries'\nimport ShippingForm from '../../components/checkout/ShippingForm'\n\nconst Checkout = ({\n    isAuthenticated, \n    items,\n    update_item,\n    remove_item,\n    setAlert,\n    get_shipping_options,\n    shipping,\n    refresh,\n    get_payment_total,\n    get_client_token,\n    process_payment,\n    user,\n    total_items,\n    clientToken,\n    made_payment,\n    loading,\n    original_price,\n    total_after_coupon,\n    total_amount,\n    total_compare_amount,\n    estimated_tax,\n    shipping_cost,\n    check_coupon,\n    coupon\n}) => {\n\n    const [formData, setFormData] = useState({\n        full_name: '',\n        address_line_1: '',\n        address_line_2: '',\n        city: '',\n        state_province_region: '',\n        postal_zip_code: '',\n        country_region: 'Peru',\n        telephone_number: '',\n        coupon_name: '',\n        shipping_id: 0,\n    });\n\n    const [data, setData] = useState({\n        instance: {}\n    });\n\n    const { \n        full_name,\n        address_line_1,\n        address_line_2,\n        city,\n        state_province_region,\n        postal_zip_code,\n        country_region,\n        telephone_number,\n        coupon_name,\n        shipping_id,\n    } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const buy = async e => {\n        e.preventDefault();\n        let nonce = await data.instance.requestPaymentMethod();\n        if (coupon && coupon !== null && coupon !== undefined) {\n          process_payment(\n              nonce,\n              shipping_id,\n              coupon.name,\n              full_name,\n              address_line_1,\n              address_line_2,\n              city,\n              state_province_region,\n              postal_zip_code,\n              country_region,\n              telephone_number\n          );\n        } else {\n          process_payment(\n              nonce,\n              shipping_id,\n              '',\n              full_name,\n              address_line_1,\n              address_line_2,\n              city,\n              state_province_region,\n              postal_zip_code,\n              country_region,\n              telephone_number\n          );\n      }\n    }\n\n    const apply_coupon = async e => {\n      e.preventDefault();\n\n        check_coupon(coupon_name);\n    };\n\n    useEffect(() => {\n      window.scrollTo(0,0)\n      get_shipping_options()\n  }, [])\n\n  useEffect(() => {\n      get_client_token();\n  }, [user]);\n  \n  useEffect(() => {\n    if (coupon && coupon !== null && coupon !== undefined)\n        get_payment_total(shipping_id, coupon.name);\n    else\n        get_payment_total(shipping_id, 'default');\n  }, [shipping_id, coupon]);\n\n    const [render, setRender] = useState(false);\n\n    if(!isAuthenticated)\n        return <Navigate to='/' />;\n\n    const showItems = () => {\n        return(\n            <div>\n                {\n                    items && \n                    items !== null && \n                    items !== undefined && \n                    items.length !== 0 && \n                    items.map((item, index)=>{\n                        let count = item.count;\n                        return (\n                            <div key={index}>\n                                <CartItem \n                                    item={item}\n                                    count={count}\n                                    update_item={update_item}\n                                    remove_item={remove_item}\n                                    render={render}\n                                    setRender={setRender}\n                                    setAlert={setAlert}\n                                />\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        )\n    }\n\n    const renderShipping = () => {\n        if (shipping && shipping !== null && shipping !== undefined) {\n            return (\n                <div className='mb-5'>\n                    {\n                        shipping.map((shipping_option, index) => (\n                            <div key={index}>\n                                <input\n                                    onChange={e => onChange(e)}\n                                    value={shipping_option.id}\n                                    name='shipping_id'\n                                    type='radio'\n                                    required\n                                />\n                                <label className='ml-4'>\n                                    {shipping_option.name} - ${shipping_option.price} ({shipping_option.time_to_delivery})\n                                </label>\n                            </div>\n                        ))\n                    }\n                </div>\n            );\n        }\n    };\n\n    const renderPaymentInfo = () => {\n      if (!clientToken) {\n        if (!isAuthenticated) {\n            <Link\n              to=\"/login\"\n              className=\"w-full bg-gray-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-gray-500\"\n            >\n              Login\n            </Link>\n        } else {\n          <button\n            className=\"w-full bg-indigo-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\"\n          >\n            <Loader\n              type='Oval'\n              color='#fff'\n              height={20}\n              widht={20}\n            />\n          </button>\n        }\n      } else {\n        return (\n          <>\n            <DropIn\n              options={{\n                  authorization: clientToken,\n                  paypal: {\n                      flow: 'vault'\n                  }\n              }}\n              onInstance={instance => (data.instance = instance)}\n            />\n            <div className=\"mt-6\">\n              {loading?<button\n                className=\"w-full bg-indigo-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\"\n              >\n                <Loader\n                  type='Oval'\n                  color='#fff'\n                  height={20}\n                  widht={20}\n                />\n              </button>:\n              <button\n              type=\"submit\"\n              className=\"w-full bg-green-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-green-500\"\n            >\n              Place Order\n            </button>}\n            </div>\n          </>\n        )\n      }\n    }\n\n    if (made_payment)\n        return <Navigate to='/thankyou' />;\n\n    return (\n        <Layout>\n            <div className=\"bg-white\">\n      <div className=\"max-w-2xl mx-auto pt-16 pb-24 px-4 sm:px-6 lg:max-w-7xl lg:px-8\">\n        <h1 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Checkout</h1>\n        <div className=\"mt-12 lg:grid lg:grid-cols-12 lg:gap-x-12 lg:items-start xl:gap-x-16\">\n          <section aria-labelledby=\"cart-heading\" className=\"lg:col-span-7\">\n            <h2 id=\"cart-heading\" className=\"sr-only\">\n              Items in your shopping cart\n            </h2>\n\n            <ul className=\"border-t border-b border-gray-200 divide-y divide-gray-200\">\n              {showItems()}\n            </ul>\n          </section>\n\n          {/* Order summary */}\n\n          <ShippingForm\n              full_name={full_name}\n              address_line_1={address_line_1}\n              address_line_2={address_line_2}\n              city={city}\n              state_province_region={state_province_region}\n              postal_zip_code={postal_zip_code}\n              telephone_number={telephone_number}\n              countries={countries}\n              onChange={onChange}\n              buy={buy}\n              user={user}\n              renderShipping={renderShipping}\n              total_amount={total_amount}\n              total_after_coupon={total_after_coupon}\n              total_compare_amount={total_compare_amount}\n              estimated_tax={estimated_tax}\n              shipping_cost={shipping_cost}\n              shipping_id={shipping_id}\n              shipping={shipping}\n              renderPaymentInfo={renderPaymentInfo}\n              coupon={coupon}\n              apply_coupon={apply_coupon}\n              coupon_name={coupon_name}\n            />\n\n          \n        </div>\n      </div>\n    </div>\n        </Layout>\n    )\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.Auth.isAuthenticated,\n    user: state.Auth.user,\n    items: state.Cart.items,\n    total_items: state.Cart.total_items,\n    shipping: state.Shipping.shipping,\n    clientToken: state.Payment.clientToken,\n    made_payment: state.Payment.made_payment,\n    loading: state.Payment.loading,\n    original_price: state.Payment.original_price,\n    total_after_coupon: state.Payment.total_after_coupon,\n    total_amount: state.Payment.total_amount,\n    total_compare_amount: state.Payment.total_compare_amount,\n    estimated_tax: state.Payment.estimated_tax,\n    shipping_cost: state.Payment.shipping_cost,\n    coupon: state.Coupons.coupon,\n})\n\nexport default connect(mapStateToProps,{\n    update_item,\n    remove_item,\n    setAlert,\n    get_shipping_options,\n    refresh,\n    get_payment_total,\n    get_client_token,\n    process_payment,\n    check_coupon\n}) (Checkout)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\ThankYou.jsx",["368"],"import Layout from '../../hocs/Layout'\nimport { connect } from 'react-redux'\nimport { Navigate } from 'react-router';\nimport { reset } from '../../redux/actions/payment';\nimport { useEffect } from 'react';\nconst ThankYou = ({\n    isAuthenticated,\n    reset\n}) => {\n\n    useEffect(() => {\n        reset()\n    }, [])\n\n    if(!isAuthenticated)\n        return <Navigate to='/' />;\n\n    return(\n        <Layout>\n            <div className=\"bg-white\">\n            <div className=\"max-w-7xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:px-8\">\n                <div className=\"text-center\">\n                <p className=\"mt-1 text-4xl font-extrabold text-gray-900 sm:text-5xl sm:tracking-tight lg:text-6xl\">\n                    THank You\n                </p>\n                <p className=\"max-w-xl mt-5 mx-auto text-xl text-gray-500\">\n                    Hope you enjoyed shopping in nineRogues\n                </p>\n                </div>\n            </div>\n            </div>\n        </Layout>\n    )\n}\nconst mapStateToProps =state => ({\n    isAuthenticated: state.Auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps,{\n    reset\n}) (ThankYou)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\DashboardPaymentDetail.jsx",["369","370","371","372","373","374","375","376","377","378","379"],"import Layout from '../../hocs/Layout'\nimport { connect } from 'react-redux'\nimport {list_orders} from '../../redux/actions/orders'\nimport { useParams } from 'react-router';\nimport {\n    get_items,\n    get_total,\n    get_item_total\n} from \"../../redux/actions/cart\";\nimport { get_order_detail } from '../../redux/actions/orders';\nimport { useEffect } from 'react';\nimport { Navigate } from 'react-router';\nimport DashboardLink from '../../components/dashboard/DashboardLink';\nimport { Fragment, useState } from 'react'\nimport { Dialog, Menu, Transition } from '@headlessui/react'\nimport {\n  BellIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  FolderIcon,\n  HomeIcon,\n  InboxIcon,\n  MenuAlt2Icon,\n  UsersIcon,\n  XIcon,\n  PaperClipIcon\n} from '@heroicons/react/outline'\nimport { SearchIcon } from '@heroicons/react/solid'\nimport { Link } from 'react-router-dom';\nimport moment from 'moment'\n\nconst userNavigation = [\n  { name: 'Your Profile', href: '#' },\n  { name: 'Settings', href: '#' },\n  { name: 'Sign out', href: '#' },\n]\n\nconst products = [\n  {\n    id: 1,\n    name: 'Distant Mountains Artwork Tee',\n    price: '$36.00',\n    description: 'You awake in a new, mysterious land. Mist hangs low along the distant mountains. What does it mean?',\n    address: ['Floyd Miles', '7363 Cynthia Pass', 'Toronto, ON N3Y 4H8'],\n    email: 'f•••@example.com',\n    phone: '1•••••••••40',\n    href: '#',\n    status: 'Processing',\n    step: 1,\n    date: 'March 24, 2021',\n    datetime: '2021-03-24',\n    imageSrc: 'https://tailwindui.com/img/ecommerce-images/confirmation-page-04-product-01.jpg',\n    imageAlt: 'Off-white t-shirt with circular dot illustration on the front of mountain ridges that fade.',\n  },\n  // More products...\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nconst DashboardPaymentDetail =({\n    list_orders,\n    get_items,\n    get_total,\n    get_item_total,\n    order,\n    isAuthenticated,\n    user,\n    get_order_detail\n})=>{\n\n    const [sidebarOpen, setSidebarOpen] = useState(false)\n\n    const params = useParams()\n    const transaction_id = params.transaction_id\n    \n    useEffect(() => {\n        get_order_detail(transaction_id)\n    }, [transaction_id])\n\n    if(!isAuthenticated)\n        return <Navigate to=\"/\"/>\n\n    return (\n        <>\n            <div>\n        <Transition.Root show={sidebarOpen} as={Fragment}>\n          <Dialog as=\"div\" className=\"fixed inset-0 flex z-40 md:hidden\" onClose={setSidebarOpen}>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" />\n            </Transition.Child>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"-translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"-translate-x-full\"\n            >\n              <div className=\"relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white\">\n                <Transition.Child\n                  as={Fragment}\n                  enter=\"ease-in-out duration-300\"\n                  enterFrom=\"opacity-0\"\n                  enterTo=\"opacity-100\"\n                  leave=\"ease-in-out duration-300\"\n                  leaveFrom=\"opacity-100\"\n                  leaveTo=\"opacity-0\"\n                >\n                  <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n                    <button\n                      type=\"button\"\n                      className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n                      onClick={() => setSidebarOpen(false)}\n                    >\n                      <span className=\"sr-only\">Close sidebar</span>\n                      <XIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </Transition.Child>\n                <div className=\"flex-shrink-0 flex items-center px-4\">\n                    <Link to=\"/\">\n                  <img\n                    className=\"h-8 w-auto cursor-pointer\"\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\n                    alt=\"Workflow\"\n                  />\n                  </Link>\n                </div>\n                <div className=\"mt-5 flex-1 h-0 overflow-y-auto\">\n                  <nav className=\"px-2 space-y-1\">\n                  <DashboardLink/>\n                  </nav>\n                </div>\n              </div>\n            </Transition.Child>\n            <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\n              {/* Dummy element to force sidebar to shrink to fit close icon */}\n            </div>\n          </Dialog>\n        </Transition.Root>\n\n        {/* Static sidebar for desktop */}\n        <div className=\"hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n          {/* Sidebar component, swap this element with another sidebar if you like */}\n          <div className=\"flex flex-col flex-grow border-r border-gray-200 pt-5 bg-white overflow-y-auto\">\n            <div className=\"flex items-center flex-shrink-0 px-4\">\n\n            <Link\n                to=\"/\"\n                className=\"inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n                Regresar\n            </Link>\n            \n              <img\n                className=\"h-8 w-auto\"\n                src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\n                alt=\"Workflow\"\n              />\n              \n            </div>\n            <div className=\"mt-5 flex-grow flex flex-col\">\n              <nav className=\"flex-1 px-2 pb-4 space-y-1\">\n                <DashboardLink/>\n              </nav>\n            </div>\n          </div>\n        </div>\n        <div className=\"md:pl-64 flex flex-col flex-1\">\n          <div className=\"sticky top-0 z-10 flex-shrink-0 flex h-16 bg-white shadow\">\n            <button\n              type=\"button\"\n              className=\"px-4 border-r border-gray-200 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden\"\n              onClick={() => setSidebarOpen(true)}\n            >\n              <span className=\"sr-only\">Open sidebar</span>\n              <MenuAlt2Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n            <div className=\"flex-1 px-4 flex justify-between\">\n              <div className=\"flex-1 flex\">\n                <form className=\"w-full flex md:ml-0\" action=\"#\" method=\"GET\">\n                  <label htmlFor=\"search-field\" className=\"sr-only\">\n                    Search\n                  </label>\n                  <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\n                    <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\n                      <SearchIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </div>\n                    <input\n                      id=\"search-field\"\n                      className=\"block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\"\n                      placeholder=\"Search\"\n                      type=\"search\"\n                      name=\"search\"\n                    />\n                  </div>\n                </form>\n              </div>\n              <div className=\"ml-4 flex items-center md:ml-6\">\n                <button\n                  type=\"button\"\n                  className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Profile dropdown */}\n                <Menu as=\"div\" className=\"ml-3 relative\">\n                  <div>\n                    <Menu.Button className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                      <span className=\"sr-only\">Open user menu</span>\n                      <img\n                        className=\"h-8 w-8 rounded-full\"\n                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                        alt=\"\"\n                      />\n                    </Menu.Button>\n                  </div>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                      {userNavigation.map((item) => (\n                        <Menu.Item key={item.name}>\n                          {({ active }) => (\n                            <a\n                              href={item.href}\n                              className={classNames(\n                                active ? 'bg-gray-100' : '',\n                                'block px-4 py-2 text-sm text-gray-700'\n                              )}\n                            >\n                              {item.name}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ))}\n                    </Menu.Items>\n                  </Transition>\n                </Menu>\n              </div>\n            </div>\n          </div>\n\n          <main className=\"flex-1\">\n            <div className=\"py-6\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            {/* We've used 3xl here, but feel free to try other max-widths based on your needs */}\n            <div className=\"max-w-3xl mx-auto\">\n\n            <div className=\"bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 py-4 sm:px-6 sm:py-6 lg:px-8\">\n      <div className=\"bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 py-16 sm:px-6 sm:py-24 lg:px-8\">\n        <h1 className=\"text-3xl font-extrabold tracking-tight text-gray-900\">Order Details</h1>\n\n        <div className=\"text-sm border-b border-gray-200 mt-2 pb-5 sm:flex sm:justify-between\">\n          <dl className=\"flex\">\n            <dt className=\"text-gray-500\">Transaction ID: &nbsp;</dt>\n            <dd className=\"font-medium text-gray-900\">{order.transaction_id}</dd>\n            <dt>\n              <span className=\"sr-only\">Date</span>\n              <span className=\"text-gray-400 mx-2\" aria-hidden=\"true\">\n                &middot;\n              </span>\n            </dt>\n            <dd className=\"font-medium text-gray-900\">\n              <time dateTime=\"2021-03-22\">March 22, 2021</time>\n            </dd>\n          </dl>\n        </div>\n\n        <div className=\"mt-8\">\n          <h2 className=\"sr-only\">Products purchased</h2>\n\n          <div className=\"space-y-24\">\n            {order.order_items.map((product) => (\n              <div\n              key={product.id}\n              className=\"grid grid-cols-1 text-sm sm:grid-rows-1 sm:grid-cols-12 sm:gap-x-6 md:gap-x-8 lg:gap-x-8\"\n            >\n              \n\n              <div className=\"mt-6 sm:col-span-7 sm:mt-0 md:row-end-1\">\n                <h3 className=\"text-lg font-medium text-gray-900\">\n                  <Link to={`/product/${product.id}`}>{product.name}</Link>\n                </h3>\n                <p className=\"font-medium text-gray-900 mt-1\">Transaction ID: {product.transaction_id}</p>\n                <p className=\"text-gray-500 mt-3\">{product.description}</p>\n              </div>\n              <div className=\"sm:col-span-12 md:col-span-7\">\n                <dl className=\"grid grid-cols-1 gap-y-8 border-b py-8 border-gray-200 sm:grid-cols-2 sm:gap-x-6 sm:py-6 md:py-10\">\n                  <div>\n                    <dt className=\"font-medium text-gray-900\">Delivery address</dt>\n                    <dd className=\"mt-3 text-gray-500\">\n                      <span className=\"block\">{product.address_line_1}</span>\n                      <span className=\"block\">{product.address_line_2}</span>\n                    </dd>\n                  </div>\n                  <div>\n                    <dt className=\"font-medium text-gray-900\">Shipping</dt>\n                    <dd className=\"mt-3 text-gray-500 space-y-3\">\n                      <p>$ {product.shipping_price}</p>\n                      <p>$ {product.amount} Total Cost</p>\n                      \n                    </dd>\n                  </div>\n                </dl>\n                <p className=\"font-medium text-gray-900 mt-6 md:mt-10\">\n                  Status: {product.status}\n                </p>\n                <div className=\"mt-6\">\n                  <div className=\"bg-gray-200 rounded-full overflow-hidden\">\n                    <div\n                      className=\"h-2 bg-indigo-600 rounded-full\"\n                      style={{ width: `calc((${product.step} * 2 + 1) / 8 * 100%)` }}\n                    />\n                  </div>\n                  <div className=\"hidden sm:grid grid-cols-4 font-medium text-gray-600 mt-6\">\n                    <div className=\"text-indigo-600\">Order placed</div>\n                    <div className={classNames(product.step > 0 ? 'text-indigo-600' : '', 'text-center')}>\n                      Processing\n                    </div>\n                    <div className={classNames(product.step > 1 ? 'text-indigo-600' : '', 'text-center')}>\n                      Shipped\n                    </div>\n                    <div className={classNames(product.step > 2 ? 'text-indigo-600' : '', 'text-right')}>\n                      Delivered\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            ))}\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n        <div className=\"mt-8\">\n           \n          <div className=\"space-y-12\">\n            \n          </div>\n        </div>\n      </div>\n    </div>\n\n            </div>\n            </div>\n            </div>\n          </main>\n        </div>\n      </div>\n        </>\n    )\n}\n\nconst mapStateToProps =state=>({\n    order: state.Orders.order,\n    isAuthenticated: state.Auth.isAuthenticated,\n    user: state.Auth.user\n})\n\nexport default connect(mapStateToProps,{\n    list_orders,\n    get_items,\n    get_total,\n    get_item_total,\n    get_order_detail\n}) (DashboardPaymentDetail)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\DashboardProfile.jsx",["380","381","382","383","384","385","386","387","388"],"\nimport { connect } from 'react-redux'\nimport {list_orders} from '../../redux/actions/orders'\nimport {\n    get_items,\n    get_total,\n    get_item_total\n} from \"../../redux/actions/cart\";\nimport { useEffect } from 'react';\nimport { Navigate } from 'react-router';\nimport DashboardLink from '../../components/dashboard/DashboardLink';\nimport { Fragment, useState } from 'react'\nimport { Dialog, Menu, Transition } from '@headlessui/react'\nimport { toast } from 'react-toastify'\nimport {\n  BellIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  FolderIcon,\n  HomeIcon,\n  InboxIcon,\n  MenuAlt2Icon,\n  UsersIcon,\n  XIcon,\n  PaperClipIcon\n} from '@heroicons/react/outline'\nimport { SearchIcon } from '@heroicons/react/solid'\nimport { Link } from 'react-router-dom';\nimport { countries } from '../../helpers/fixedCountries';\nimport { update_user_profile } from '../../redux/actions/profile';\nimport Loader from 'react-loader-spinner';\nconst userNavigation = [\n  { name: 'Your Profile', href: '#' },\n  { name: 'Settings', href: '#' },\n  { name: 'Sign out', href: '#' },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nconst DashboardProfile =({\n    list_orders,\n    get_items,\n    get_total,\n    get_item_total,\n    orders,\n    isAuthenticated,\n    user,\n    update_user_profile,\n    profile\n})=>{\n\n    const [sidebarOpen, setSidebarOpen] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        get_items()\n        get_total()\n        get_item_total()\n        list_orders()\n    }, [])\n\n    const [formData, setFormData] = useState({\n        address_line_1: '',\n        address_line_2: '',\n        city: '',\n        state_province_region: '',\n        zipcode: '',\n        phone: '',\n        country_region: 'Canada'\n    });\n\n    const {\n        address_line_1,\n        address_line_2,\n        city,\n        state_province_region,\n        zipcode,\n        phone,\n        country_region\n    } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n      e.preventDefault();\n      setLoading(true)\n      update_user_profile(\n          address_line_1,\n          address_line_2,\n          city,\n          state_province_region,\n          zipcode,\n          phone,\n          country_region\n      );\n      setLoading(false)\n      window.scrollTo(0, 0);\n  };\n\n    if(!isAuthenticated)\n        return <Navigate to=\"/\"/>\n\n    return (\n        <>\n            <div>\n        <Transition.Root show={sidebarOpen} as={Fragment}>\n          <Dialog as=\"div\" className=\"fixed inset-0 flex z-40 md:hidden\" onClose={setSidebarOpen}>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" />\n            </Transition.Child>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"-translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"-translate-x-full\"\n            >\n              <div className=\"relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white\">\n                <Transition.Child\n                  as={Fragment}\n                  enter=\"ease-in-out duration-300\"\n                  enterFrom=\"opacity-0\"\n                  enterTo=\"opacity-100\"\n                  leave=\"ease-in-out duration-300\"\n                  leaveFrom=\"opacity-100\"\n                  leaveTo=\"opacity-0\"\n                >\n                  <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n                    <button\n                      type=\"button\"\n                      className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n                      onClick={() => setSidebarOpen(false)}\n                    >\n                      <span className=\"sr-only\">Close sidebar</span>\n                      <XIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </Transition.Child>\n                <div className=\"flex-shrink-0 flex items-center px-4\">\n                    <Link to=\"/\">\n                  <img\n                    className=\"h-8 w-auto cursor-pointer\"\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\n                    alt=\"Workflow\"\n                  />\n                  </Link>\n                </div>\n                <div className=\"mt-5 flex-1 h-0 overflow-y-auto\">\n                  <nav className=\"px-2 space-y-1\">\n                  <DashboardLink/>\n                  </nav>\n                </div>\n              </div>\n            </Transition.Child>\n            <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\n              {/* Dummy element to force sidebar to shrink to fit close icon */}\n            </div>\n          </Dialog>\n        </Transition.Root>\n\n        {/* Static sidebar for desktop */}\n        <div className=\"hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n          {/* Sidebar component, swap this element with another sidebar if you like */}\n          <div className=\"flex flex-col flex-grow border-r border-gray-200 pt-5 bg-white overflow-y-auto\">\n            <div className=\"flex items-center flex-shrink-0 px-4\">\n\n            <Link\n                to=\"/\"\n                className=\"inline-flex items-center px-2.5 py-1.5 border border-gray-500 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n                Regresar\n            </Link>\n            \n              <img\n                className=\"h-8 w-auto\"\n                src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\n                alt=\"Workflow\"\n              />\n              \n            </div>\n            <div className=\"mt-5 flex-grow flex flex-col\">\n              <nav className=\"flex-1 px-2 pb-4 space-y-1\">\n                <DashboardLink/>\n              </nav>\n            </div>\n          </div>\n        </div>\n        <div className=\"md:pl-64 flex flex-col flex-1\">\n          <div className=\"sticky top-0 z-10 flex-shrink-0 flex h-16 bg-white shadow\">\n            <button\n              type=\"button\"\n              className=\"px-4 border-r border-gray-200 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden\"\n              onClick={() => setSidebarOpen(true)}\n            >\n              <span className=\"sr-only\">Open sidebar</span>\n              <MenuAlt2Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n            <div className=\"flex-1 px-4 flex justify-between\">\n              <div className=\"flex-1 flex\">\n                <form className=\"w-full flex md:ml-0\" action=\"#\" method=\"GET\">\n                  <label htmlFor=\"search-field\" className=\"sr-only\">\n                    Search\n                  </label>\n                  <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\n                    <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\n                      <SearchIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </div>\n                    <input\n                      id=\"search-field\"\n                      className=\"block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\"\n                      placeholder=\"Search\"\n                      type=\"search\"\n                      name=\"search\"\n                    />\n                  </div>\n                </form>\n              </div>\n              <div className=\"ml-4 flex items-center md:ml-6\">\n                <button\n                  type=\"button\"\n                  className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Profile dropdown */}\n                <Menu as=\"div\" className=\"ml-3 relative\">\n                  <div>\n                    <Menu.Button className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                      <span className=\"sr-only\">Open user menu</span>\n                      <img\n                        className=\"h-8 w-8 rounded-full\"\n                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                        alt=\"\"\n                      />\n                    </Menu.Button>\n                  </div>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                      {userNavigation.map((item) => (\n                        <Menu.Item key={item.name}>\n                          {({ active }) => (\n                            <a\n                              href={item.href}\n                              className={classNames(\n                                active ? 'bg-gray-100' : '',\n                                'block px-4 py-2 text-sm text-gray-700'\n                              )}\n                            >\n                              {item.name}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ))}\n                    </Menu.Items>\n                  </Transition>\n                </Menu>\n              </div>\n            </div>\n          </div>\n\n          <main className=\"flex-1\">\n            <div className=\"py-6\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            {/* We've used 3xl here, but feel free to try other max-widths based on your needs */}\n            <form onSubmit={e => onSubmit(e)} className=\"max-w-3xl mx-auto\">\n      \n        \n              <div className=\"bg-white px-4 py-5 border-b border-gray-200 sm:px-6\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Profile</h3>\n              </div>\n\n              <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Address Line 1: \n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                  <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                    \n                    <input\n                      type=\"text\"\n                      name='address_line_1'\n                      placeholder={`${profile.address_line_1}`}\n                      onChange={e => onChange(e)}\n                      value={address_line_1}\n                      className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Address Line 2: \n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                  <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                    \n                    <input\n                      type=\"text\"\n                      name='address_line_2'\n                      placeholder={`${profile.address_line_2}`}\n                      onChange={e => onChange(e)}\n                      value={address_line_2}\n                      className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                City\n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                  <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                    \n                    <input\n                      type=\"text\"\n                      name='city'\n                      placeholder={`${profile.city}`}\n                      onChange={e => onChange(e)}\n                      value={city}\n                      className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                State/Province: \n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                  <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                    \n                    <input\n                      type=\"text\"\n                      name='state_province_region'\n                            placeholder={`${profile.state_province_region}`}\n                            onChange={e => onChange(e)}\n                            value={state_province_region}\n                      className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Postal Code/Zipcode: \n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                  <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                    \n                    <input\n                      type=\"text\"\n                      name='zipcode'\n                            placeholder={`${profile.zipcode}`}\n                            onChange={e => onChange(e)}\n                            value={zipcode}\n                      className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Phone: \n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                  <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                    \n                    <input\n                      type=\"text\"\n                      name='phone'\n                            placeholder={`${profile.phone}`}\n                            onChange={e => onChange(e)}\n                            value={phone}\n                      className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                  Country\n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                        <select\n                            id='country_region' \n                            name='country_region'\n                            onChange={e => onChange(e)}\n                        >\n                            <option value={country_region}>{profile.country_region}</option>\n                            {\n                                countries && countries.map((country, index) => (\n                                    <option key={index} value={country.name}>{country.name}</option>\n                                ))\n                            }\n                        </select>\n                </div>\n              </div>\n\n              {loading?<button\n                className=\"inline-flex mt-4 float-right items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <Loader\n                type=\"Oval\"\n                width={20}\n                height={20}\n                color=\"#fff\"\n                />\n              </button>:<button\n                type=\"submit\"\n                className=\"inline-flex mt-4 float-right items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Save\n              </button>}\n\n            </form>\n            </div>\n            </div>\n          </main>\n        </div>\n      </div>\n        </>\n    )\n}\n\nconst mapStateToProps =state=>({\n    orders: state.Orders.orders,\n    isAuthenticated: state.Auth.isAuthenticated,\n    user: state.Auth.user,\n    profile: state.Profile.profile,\n})\n\nexport default connect(mapStateToProps,{\n    list_orders,\n    get_items,\n    get_total,\n    get_item_total,\n    update_user_profile\n}) (DashboardProfile)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\containers\\pages\\DashboardPayments.jsx",["389","390","391","392","393"],"import Layout from '../../hocs/Layout'\nimport { connect } from 'react-redux'\nimport {list_orders} from '../../redux/actions/orders'\nimport {\n    get_items,\n    get_total,\n    get_item_total\n} from \"../../redux/actions/cart\";\nimport { useEffect } from 'react';\nimport { Navigate } from 'react-router';\nimport DashboardLink from '../../components/dashboard/DashboardLink';\nimport { Fragment, useState } from 'react'\nimport { Dialog, Menu, Transition } from '@headlessui/react'\nimport {\n  BellIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  FolderIcon,\n  HomeIcon,\n  InboxIcon,\n  MenuAlt2Icon,\n  UsersIcon,\n  XIcon,\n  PaperClipIcon\n} from '@heroicons/react/outline'\nimport { SearchIcon } from '@heroicons/react/solid'\nimport { Link } from 'react-router-dom';\nimport moment from 'moment'\nconst navigation = [\n  { name: 'Dashboard', href: '#', icon: HomeIcon, current: true },\n  { name: 'Team', href: '#', icon: UsersIcon, current: false },\n  { name: 'Projects', href: '#', icon: FolderIcon, current: false },\n  { name: 'Calendar', href: '#', icon: CalendarIcon, current: false },\n  { name: 'Documents', href: '#', icon: InboxIcon, current: false },\n  { name: 'Reports', href: '#', icon: ChartBarIcon, current: false },\n]\nconst userNavigation = [\n  { name: 'Your Profile', href: '#' },\n  { name: 'Settings', href: '#' },\n  { name: 'Sign out', href: '#' },\n]\n\nconst products = [\n  {\n    id: 1,\n    name: 'Distant Mountains Artwork Tee',\n    price: '$36.00',\n    description: 'You awake in a new, mysterious land. Mist hangs low along the distant mountains. What does it mean?',\n    address: ['Floyd Miles', '7363 Cynthia Pass', 'Toronto, ON N3Y 4H8'],\n    email: 'f•••@example.com',\n    phone: '1•••••••••40',\n    href: '#',\n    status: 'Processing',\n    step: 1,\n    date: 'March 24, 2021',\n    datetime: '2021-03-24',\n    imageSrc: 'https://tailwindui.com/img/ecommerce-images/confirmation-page-04-product-01.jpg',\n    imageAlt: 'Off-white t-shirt with circular dot illustration on the front of mountain ridges that fade.',\n  },\n  // More products...\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nconst DashboardPayments =({\n    list_orders,\n    get_items,\n    get_total,\n    get_item_total,\n    orders,\n    isAuthenticated,\n    user\n})=>{\n\n    const [sidebarOpen, setSidebarOpen] = useState(false)\n\n    useEffect(() => {\n        get_items()\n        get_total()\n        get_item_total()\n        list_orders()\n    }, [])\n\n    if(!isAuthenticated)\n        return <Navigate to=\"/\"/>\n\n    return (\n        <>\n            <div>\n        <Transition.Root show={sidebarOpen} as={Fragment}>\n          <Dialog as=\"div\" className=\"fixed inset-0 flex z-40 md:hidden\" onClose={setSidebarOpen}>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" />\n            </Transition.Child>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"-translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"-translate-x-full\"\n            >\n              <div className=\"relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white\">\n                <Transition.Child\n                  as={Fragment}\n                  enter=\"ease-in-out duration-300\"\n                  enterFrom=\"opacity-0\"\n                  enterTo=\"opacity-100\"\n                  leave=\"ease-in-out duration-300\"\n                  leaveFrom=\"opacity-100\"\n                  leaveTo=\"opacity-0\"\n                >\n                  <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n                    <button\n                      type=\"button\"\n                      className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n                      onClick={() => setSidebarOpen(false)}\n                    >\n                      <span className=\"sr-only\">Close sidebar</span>\n                      <XIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </Transition.Child>\n                <div className=\"flex-shrink-0 flex items-center px-4\">\n                    <Link to=\"/\">\n                  <img\n                    className=\"h-8 w-auto cursor-pointer\"\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\n                    alt=\"Workflow\"\n                  />\n                  </Link>\n                </div>\n                <div className=\"mt-5 flex-1 h-0 overflow-y-auto\">\n                  <nav className=\"px-2 space-y-1\">\n                  <DashboardLink/>\n                  </nav>\n                </div>\n              </div>\n            </Transition.Child>\n            <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\n              {/* Dummy element to force sidebar to shrink to fit close icon */}\n            </div>\n          </Dialog>\n        </Transition.Root>\n\n        {/* Static sidebar for desktop */}\n        <div className=\"hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n          {/* Sidebar component, swap this element with another sidebar if you like */}\n          <div className=\"flex flex-col flex-grow border-r border-gray-200 pt-5 bg-white overflow-y-auto\">\n            <div className=\"flex items-center flex-shrink-0 px-4\">\n\n            <Link\n                to=\"/\"\n                className=\"inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n                Regresar\n            </Link>\n            \n              <img\n                className=\"h-8 w-auto\"\n                src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-600-mark-gray-800-text.svg\"\n                alt=\"Workflow\"\n              />\n              \n            </div>\n            <div className=\"mt-5 flex-grow flex flex-col\">\n              <nav className=\"flex-1 px-2 pb-4 space-y-1\">\n                <DashboardLink/>\n              </nav>\n            </div>\n          </div>\n        </div>\n        <div className=\"md:pl-64 flex flex-col flex-1\">\n          <div className=\"sticky top-0 z-10 flex-shrink-0 flex h-16 bg-white shadow\">\n            <button\n              type=\"button\"\n              className=\"px-4 border-r border-gray-200 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden\"\n              onClick={() => setSidebarOpen(true)}\n            >\n              <span className=\"sr-only\">Open sidebar</span>\n              <MenuAlt2Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n            <div className=\"flex-1 px-4 flex justify-between\">\n              <div className=\"flex-1 flex\">\n                <form className=\"w-full flex md:ml-0\" action=\"#\" method=\"GET\">\n                  <label htmlFor=\"search-field\" className=\"sr-only\">\n                    Search\n                  </label>\n                  <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\n                    <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\n                      <SearchIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </div>\n                    <input\n                      id=\"search-field\"\n                      className=\"block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\"\n                      placeholder=\"Search\"\n                      type=\"search\"\n                      name=\"search\"\n                    />\n                  </div>\n                </form>\n              </div>\n              <div className=\"ml-4 flex items-center md:ml-6\">\n                <button\n                  type=\"button\"\n                  className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Profile dropdown */}\n                <Menu as=\"div\" className=\"ml-3 relative\">\n                  <div>\n                    <Menu.Button className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                      <span className=\"sr-only\">Open user menu</span>\n                      <img\n                        className=\"h-8 w-8 rounded-full\"\n                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                        alt=\"\"\n                      />\n                    </Menu.Button>\n                  </div>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                      {userNavigation.map((item) => (\n                        <Menu.Item key={item.name}>\n                          {({ active }) => (\n                            <a\n                              href={item.href}\n                              className={classNames(\n                                active ? 'bg-gray-100' : '',\n                                'block px-4 py-2 text-sm text-gray-700'\n                              )}\n                            >\n                              {item.name}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ))}\n                    </Menu.Items>\n                  </Transition>\n                </Menu>\n              </div>\n            </div>\n          </div>\n\n          <main className=\"flex-1\">\n            <div className=\"py-6\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            {/* We've used 3xl here, but feel free to try other max-widths based on your needs */}\n            <div className=\"max-w-3xl mx-auto\">\n\n            <div className=\"bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 py-16 sm:px-6 sm:py-24 lg:px-8\">\n       \n\n        <div className=\"mt-8\">\n           \n          <div className=\"space-y-12\">\n            {orders.map((product) => (\n\n              <>\n               <h2 className=\"sr-only\">Products purchased</h2>\n            <h1 className=\"text-3xl font-extrabold tracking-tight text-gray-900\">Order Details</h1>\n            \n          <div className=\"text-sm border-b border-gray-200 mt-2 pb-5 sm:flex sm:justify-between\">\n            <dl className=\"flex\">\n              <dt className=\"text-gray-500\">Transaction ID: &nbsp;</dt>\n              <dd className=\"font-medium text-gray-900\">{product.transaction_id}</dd>\n              <dt>\n                <span className=\"sr-only\">Date</span>\n                <span className=\"text-gray-400 mx-2\" aria-hidden=\"true\">\n                  &middot;\n                </span>\n              </dt>\n              <dd className=\"font-medium text-gray-900\">\n                <time dateTime=\"2021-03-22\">{moment(product.date_issued).fromNow()}</time>\n              </dd>\n            </dl>\n            <div className=\"mt-4 sm:mt-0\">\n              <Link to={`/dashboard/payment/${product.transaction_id}`} className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                View invoice<span aria-hidden=\"true\"> &rarr;</span>\n              </Link>\n            </div>\n          </div>\n              <div\n                key={product.id}\n                className=\"grid grid-cols-1 text-sm sm:grid-rows-1 sm:grid-cols-12 sm:gap-x-6 md:gap-x-8 lg:gap-x-8\"\n              >\n                \n\n                <div className=\"mt-6 sm:col-span-7 sm:mt-0 md:row-end-1\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">\n                    <Link to={`/product/${product.id}`}>{product.name}</Link>\n                  </h3>\n                  <p className=\"font-medium text-gray-900 mt-1\">Transaction ID: {product.transaction_id}</p>\n                  <p className=\"text-gray-500 mt-3\">{product.description}</p>\n                </div>\n                <div className=\"sm:col-span-12 md:col-span-7\">\n                  <dl className=\"grid grid-cols-1 gap-y-8 border-b py-8 border-gray-200 sm:grid-cols-2 sm:gap-x-6 sm:py-6 md:py-10\">\n                    <div>\n                      <dt className=\"font-medium text-gray-900\">Delivery address</dt>\n                      <dd className=\"mt-3 text-gray-500\">\n                        <span className=\"block\">{product.address_line_1}</span>\n                        <span className=\"block\">{product.address_line_2}</span>\n                      </dd>\n                    </div>\n                    <div>\n                      <dt className=\"font-medium text-gray-900\">Shipping</dt>\n                      <dd className=\"mt-3 text-gray-500 space-y-3\">\n                        <p>$ {product.shipping_price}</p>\n                        <p>$ {product.amount} Total Cost</p>\n                        \n                      </dd>\n                    </div>\n                  </dl>\n                  <p className=\"font-medium text-gray-900 mt-6 md:mt-10\">\n                    Status: {product.status}\n                  </p>\n                  <div className=\"mt-6\">\n                    <div className=\"bg-gray-200 rounded-full overflow-hidden\">\n                      <div\n                        className=\"h-2 bg-indigo-600 rounded-full\"\n                        style={{ width: `calc((${product.step} * 2 + 1) / 8 * 100%)` }}\n                      />\n                    </div>\n                    <div className=\"hidden sm:grid grid-cols-4 font-medium text-gray-600 mt-6\">\n                      <div className=\"text-indigo-600\">Order placed</div>\n                      <div className={classNames(product.step > 0 ? 'text-indigo-600' : '', 'text-center')}>\n                        Processing\n                      </div>\n                      <div className={classNames(product.step > 1 ? 'text-indigo-600' : '', 'text-center')}>\n                        Shipped\n                      </div>\n                      <div className={classNames(product.step > 2 ? 'text-indigo-600' : '', 'text-right')}>\n                        Delivered\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              </>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n\n            </div>\n            </div>\n            </div>\n          </main>\n        </div>\n      </div>\n        </>\n    )\n}\n\nconst mapStateToProps =state=>({\n    orders: state.Orders.orders,\n    isAuthenticated: state.Auth.isAuthenticated,\n    user: state.Auth.user\n})\n\nexport default connect(mapStateToProps,{\n    list_orders,\n    get_items,\n    get_total,\n    get_item_total\n}) (DashboardPayments)","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\products.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\categories.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\wishlist.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\cart.js",["394","395","396","397","398"],"import axios from 'axios';\nimport {\n    ADD_ITEM,\n    GET_TOTAL,\n    GET_ITEM_TOTAL,\n    GET_ITEMS,\n    UPDATE_ITEM,\n    REMOVE_ITEM,\n    EMPTY_CART,\n    ADD_ITEM_SUCCESS,\n    ADD_ITEM_FAIL,\n    GET_TOTAL_SUCCESS,\n    GET_TOTAL_FAIL,\n    GET_ITEM_TOTAL_SUCCESS,\n    GET_ITEM_TOTAL_FAIL,\n    GET_ITEMS_SUCCESS,\n    GET_ITEMS_FAIL,\n    UPDATE_ITEM_SUCCESS,\n    UPDATE_ITEM_FAIL,\n    REMOVE_ITEM_SUCCESS,\n    REMOVE_ITEM_FAIL,\n    EMPTY_CART_SUCCESS,\n    EMPTY_CART_FAIL,\n    SYNCH_CART_SUCCESS,\n    SYNCH_CART_FAIL,\n} from './types';\n\n\nexport const add_item = product => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n            }\n        };\n\n        const product_id = product.id;\n        const body = JSON.stringify({ product_id });\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/cart/add-item`, body, config);\n\n            if (res.status === 201) {\n                dispatch({\n                    type: ADD_ITEM_SUCCESS,\n                    payload: res.data\n                });\n            } else {\n                dispatch({\n                    type: ADD_ITEM_FAIL\n                });\n            }\n        } catch(err){\n            dispatch({\n                type: ADD_ITEM_FAIL\n            });\n        }\n\n    } else {\n        let cart = [];\n\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        let shouldAddItem = true;\n\n        cart.map(item => {\n            if (product.id.toString() === item.product.id.toString()) {\n                shouldAddItem = false;\n            }\n        });\n\n        const order_item = {\n            product: product,\n            count: 1\n        };\n\n        if (shouldAddItem) {\n            cart.push(order_item);\n        }\n\n        dispatch({\n            type: ADD_ITEM,\n            payload: cart\n        });\n    }\n}\n\n\nexport const get_items = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n            }\n        };\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/cart-items`, config);\n\n            if (res.status === 200) {\n                dispatch({\n                    type: GET_ITEMS_SUCCESS,\n                    payload: res.data\n                });\n            } else {\n                dispatch({\n                    type: GET_ITEMS_FAIL\n                });\n            }\n        } catch(err) {\n            dispatch({\n                type: GET_ITEMS_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: GET_ITEMS\n        });\n    }\n}\n\nexport const get_total = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n            }\n        };\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-total`, config);\n\n            if (res.status === 200) {\n                dispatch({\n                    type: GET_TOTAL_SUCCESS,\n                    payload: res.data\n                });\n            } else {\n                dispatch({\n                    type: GET_TOTAL_FAIL\n                });\n            }\n        } catch(err) {\n            dispatch({\n                type: GET_TOTAL_FAIL\n            });\n        }\n    } else {\n        let total = 0.0;\n        let compare_total = 0.0;\n        let cart = [];\n\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n\n            cart.map(item => {\n                total += parseFloat(item.product.price) * parseFloat(item.count);\n                compare_total += parseFloat(item.product.compare_price) * parseFloat(item.count);\n            });\n        }\n\n        dispatch({\n            type: GET_TOTAL,\n            payload: [parseFloat(total.toFixed(2)), parseFloat(compare_total.toFixed(2))]\n        });\n    }\n}\n\n\nexport const get_item_total = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n            }\n        };\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/cart/get-item-total`, config);\n\n            if (res.status === 200) {\n                dispatch({\n                    type: GET_ITEM_TOTAL_SUCCESS,\n                    payload: res.data\n                });\n            } else {\n                dispatch({\n                    type: GET_ITEM_TOTAL_FAIL\n                });\n            }\n        } catch(err) {\n            dispatch({\n                type: GET_ITEM_TOTAL_FAIL\n            });\n        }\n    } else {\n        let total = 0;\n\n        if (localStorage.getItem('cart')) {\n            total = JSON.parse(localStorage.getItem('cart')).length;\n        }\n\n        dispatch({\n            type: GET_ITEM_TOTAL,\n            payload: total\n        });\n    }\n}\n\nexport const update_item = (item, count) => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n            }\n        };\n\n        const product_id = item.product.id;\n        const body = JSON.stringify({ product_id, count });\n\n        try {\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/update-item`, body, config);\n\n            if (res.status === 200 && !res.data.error) {\n                dispatch({\n                    type: UPDATE_ITEM_SUCCESS,\n                    payload: res.data\n                });\n            } else {\n                dispatch({\n                    type: UPDATE_ITEM_FAIL\n                });\n            }\n        } catch(err) {\n            dispatch({\n                type: UPDATE_ITEM_FAIL\n            });\n        }\n\n    } else {\n        let cart = [];\n\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n\n            cart.map((cart_item, index) => {\n                if (cart_item.product.id.toString() === item.product.id.toString()) {\n                    cart[index].count = parseInt(count);\n                }\n            });\n        }\n\n        dispatch({\n            type: UPDATE_ITEM,\n            payload: cart\n        });\n    }\n}\n\n\nexport const remove_item = item => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const product_id = item.product.id;\n        const body = JSON.stringify({ product_id });\n\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n            },\n            data: body\n        };\n\n        try {\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/remove-item`, config);\n\n            if (res.status === 200) {\n                dispatch({\n                    type: REMOVE_ITEM_SUCCESS,\n                    payload: res.data\n                });\n            } else {\n                dispatch({\n                    type: REMOVE_ITEM_FAIL\n                });\n            }\n        } catch(err) {\n            dispatch({\n                type: REMOVE_ITEM_FAIL\n            });\n        }\n    } else {\n        let cart = [];\n        let new_cart = [];\n\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n\n            cart.map(cart_item => {\n                if (cart_item.product.id.toString() !== item.product.id.toString()) {\n                    new_cart.push(cart_item);\n                }\n            });\n        }\n\n        dispatch({\n            type: REMOVE_ITEM,\n            payload: new_cart\n        });\n    }\n}\n\nexport const empty_cart = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n            }\n        };\n\n        try {\n            const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/cart/empty-cart`, config);\n\n            if (res.status === 200) {\n                dispatch({\n                    type: EMPTY_CART_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: EMPTY_CART_FAIL\n                });\n            }\n        } catch(err) {\n            dispatch({\n                type: EMPTY_CART_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: EMPTY_CART\n        });\n    }\n}\n\n\nexport const synch_cart = () => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\n        }\n    };\n\n    let cart_items = [];\n\n    if (localStorage.getItem('cart')) {\n        let cart = JSON.parse(localStorage.getItem('cart'));\n\n        cart.map(cart_item => {\n            const item = {};\n            item.product_id = cart_item.product.id;\n            item.count = cart_item.count;\n            cart_items.push(item);\n        });\n    }\n\n    const body = JSON.stringify({ cart_items });\n\n    try {\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/api/cart/synch`, body, config);\n\n        if (res.status === 201) {\n            dispatch({\n                type: SYNCH_CART_SUCCESS\n            });\n        } else {\n            dispatch({\n                type: SYNCH_CART_FAIL\n            });\n        }\n    } catch(err) {\n        dispatch({\n            type: SYNCH_CART_FAIL\n        });\n    }\n}","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\product\\ProductCard.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\product\\ImageGallery.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\product\\WishlistHeart.js",["399"],"const WishlistHeart =({\n\n    addToWishlist,\n    product,\n    wishlist\n})=>{\n    \n\n    const renderWishlistHeart = () => {\n        let selected = false;\n\n        if (\n            wishlist &&\n            wishlist !== null &&\n            wishlist !== undefined &&\n            product &&\n            product !== null && \n            product !== undefined\n        ) {\n            wishlist.map(item => {\n                if (item.product.id.toString() === product.id.toString()) {\n                    selected = true;\n                }\n            });\n        }\n    \n        if (selected) {\n            return (\n                <button \n                onClick={addToWishlist}\n                className=\"ml-4 py-3 px-3 rounded-md flex items-center justify-center text-gray-400 bg-gray-200 hover:text-gray-500\">\n                    <svg className=\"h-6 w-6 flex-shrink-0\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n                    </svg>\n                    <span className=\"sr-only\">Add to favorites</span>\n                </button>\n            )\n        } else {\n            return (\n                <button \n                onClick={addToWishlist}\n                className=\"ml-4 py-3 px-3 rounded-md flex items-center justify-center text-gray-400 hover:bg-gray-100 hover:text-gray-500\">\n                    <svg className=\"h-6 w-6 flex-shrink-0\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n                    </svg>\n                    <span className=\"sr-only\">Add to favorites</span>\n                </button>\n            )\n        }\n    }\n\n    return(\n        <>\n        {renderWishlistHeart()}\n        </>\n    )\n}\n\nexport default WishlistHeart","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\cart\\WishlistItem.js",["400","401"],"import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UploadIcon, XIcon, CheckIcon, ClockIcon } from \"@heroicons/react/solid\";\nimport { useEffect } from \"react\";\nconst WishlistItem = ({\n    item,\n    count,\n    update_item,\n    remove_wishlist_item,\n    render,\n    setRender,\n    setAlert\n})=>{\n    const [formData, setFormData] = useState({\n        item_count: 1\n    });\n\n    const { item_count } = formData;\n    \n    useEffect(() => {\n        if (count)\n            setFormData({ ...formData, item_count: count });\n    }, [count]);\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault()\n        const fetchData = async () => {\n            try {\n                if (item.product.quantity >= item_count) {\n                    await update_item(item, item_count);\n                }\n                else {\n                    setAlert('Not enough in stock', 'danger');\n                }\n                setRender(!render);\n            } catch(err) {\n\n            }\n        };\n\n        fetchData();\n    }\n\n    const removeItemHandler = async () => {\n        await remove_wishlist_item(item);\n        window.location.reload(false);\n    };\n\n    return(\n        <li className=\"flex py-6 sm:py-10\">\n            <div className=\"flex-shrink-0\">\n            <img\n                src={item.product.photo}\n                alt=\"\"\n                className=\"w-24 h-24 rounded-md object-center object-cover sm:w-48 sm:h-48\"\n            />\n            </div>\n\n            <div className=\"ml-4 flex-1 flex flex-col justify-between sm:ml-6\">\n            <div className=\"relative pr-9 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:pr-0\">\n                <div>\n                <div className=\"flex justify-between\">\n                    <h3 className=\"text-sm\">\n                    <Link to={`/product/${item.product.id}`} className=\"font-medium text-gray-700 hover:text-gray-800\">\n                        {item.product.name}\n                    </Link>\n                    </h3>\n                </div>\n                <div className=\"mt-1 flex text-sm\">\n                    <p className=\"text-gray-500\">Color</p>\n                    {/* {product.size ? (\n                    <p className=\"ml-4 pl-4 border-l border-gray-200 text-gray-500\">{product.size}</p>\n                    ) : null} */}\n                </div>\n                <p className=\"mt-1 text-sm font-medium text-gray-900\">$ {item.product.price}</p>\n                </div>\n\n                <div className=\"mt-4 sm:mt-0 sm:pr-9\">\n                <form onSubmit={e => onSubmit(e)}>\n                    <select\n                        name='item_count' \n                        onChange={(e) => onChange(e)}\n                        value={item_count}\n                        className=\"max-w-full rounded-md border border-gray-300 py-1.5 text-base leading-5 font-medium text-gray-700 text-left shadow-sm focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                        <option>6</option>\n                        <option>7</option>\n                        <option>8</option>\n                        <option>9</option>\n                    </select>\n                    <button \n                        type=\"submit\"\n                        className=\"-m-2 p-2 inline-flex text-gray-400 hover:text-gray-500\">\n                        <span className=\"mx-2\">Update</span>\n                    </button>\n                </form>\n\n                <div className=\"absolute top-0 right-0\">\n                    <button \n                    onClick={removeItemHandler}\n                    className=\"-m-2 p-2 inline-flex text-gray-400 hover:text-gray-500\">\n                    <span className=\"sr-only\">Remove</span>\n                    <XIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </button>\n                </div>\n                </div>\n            </div>\n\n            <p className=\"mt-4 flex text-sm text-gray-700 space-x-2\">\n                {     \n                    item.product && \n                    item.product !== null &&\n                    item.product !== undefined && \n                    item.product.quantity > 0 ? \n                (\n                    <>\n                    <CheckIcon className=\"flex-shrink-0 h-5 w-5 text-green-500\" aria-hidden=\"true\" />\n                    <span>In Stock</span>\n                    </>\n                ) \n                : (\n                    <>\n                <ClockIcon className=\"flex-shrink-0 h-5 w-5 text-gray-300\" aria-hidden=\"true\" />\n                <span>Out of Stock</span>\n                    </>\n                )}\n            </p>\n            </div>\n        </li>\n    )\n}\nexport default WishlistItem","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\cart\\CartItem.js",["402","403"],"import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UploadIcon, XIcon, CheckIcon, ClockIcon } from \"@heroicons/react/solid\";\nimport { useEffect } from \"react\";\nconst CartItem = ({\n    item,\n    count,\n    update_item,\n    remove_item,\n    render,\n    setRender,\n    setAlert\n})=>{\n    const [formData, setFormData] = useState({\n        item_count: 1\n    });\n\n    const { item_count } = formData;\n    \n    useEffect(() => {\n        if (count)\n            setFormData({ ...formData, item_count: count });\n    }, [count]);\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault()\n        const fetchData = async () => {\n            try {\n                if (item.product.quantity >= item_count) {\n                    await update_item(item, item_count);\n                }\n                else {\n                    setAlert('Not enough in stock', 'danger');\n                }\n                setRender(!render);\n            } catch(err) {\n\n            }\n        };\n\n        fetchData();\n    }\n\n    const removeItemHandler = async () => {\n        await remove_item(item);\n        setRender(!render);\n    };\n\n    return(\n        <li className=\"flex py-6 sm:py-10\">\n            <div className=\"flex-shrink-0\">\n            <img\n                src={item.product.photo}\n                alt=\"\"\n                className=\"w-24 h-24 rounded-md object-center object-cover sm:w-48 sm:h-48\"\n            />\n            </div>\n\n            <div className=\"ml-4 flex-1 flex flex-col justify-between sm:ml-6\">\n            <div className=\"relative pr-9 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:pr-0\">\n                <div>\n                <div className=\"flex justify-between\">\n                    <h3 className=\"text-sm\">\n                    <Link to={`/product/${item.product.id}`} className=\"font-medium text-gray-700 hover:text-gray-800\">\n                        {item.product.name}\n                    </Link>\n                    </h3>\n                </div>\n                <div className=\"mt-1 flex text-sm\">\n                    <p className=\"text-gray-500\">Color</p>\n                    {/* {product.size ? (\n                    <p className=\"ml-4 pl-4 border-l border-gray-200 text-gray-500\">{product.size}</p>\n                    ) : null} */}\n                </div>\n                <p className=\"mt-1 text-sm font-medium text-gray-900\">$ {item.product.price}</p>\n                </div>\n\n                <div className=\"mt-4 sm:mt-0 sm:pr-9\">\n                <form onSubmit={e => onSubmit(e)}>\n                    <select\n                        name='item_count' \n                        onChange={(e) => onChange(e)}\n                        value={item_count}\n                        className=\"max-w-full rounded-md border border-gray-300 py-1.5 text-base leading-5 font-medium text-gray-700 text-left shadow-sm focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                        <option>6</option>\n                        <option>7</option>\n                        <option>8</option>\n                        <option>9</option>\n                    </select>\n                    <button \n                        type=\"submit\"\n                        className=\"-m-2 p-2 inline-flex text-gray-400 hover:text-gray-500\">\n                        <span className=\"mx-2\">Update</span>\n                    </button>\n                </form>\n\n                <div className=\"absolute top-0 right-0\">\n                    <button \n                    onClick={removeItemHandler}\n                    className=\"-m-2 p-2 inline-flex text-gray-400 hover:text-gray-500\">\n                    <span className=\"sr-only\">Remove</span>\n                    <XIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </button>\n                </div>\n                </div>\n            </div>\n\n            <p className=\"mt-4 flex text-sm text-gray-700 space-x-2\">\n                {     \n                    item.product && \n                    item.product !== null &&\n                    item.product !== undefined && \n                    item.product.quantity > 0 ? \n                (\n                    <>\n                    <CheckIcon className=\"flex-shrink-0 h-5 w-5 text-green-500\" aria-hidden=\"true\" />\n                    <span>In Stock</span>\n                    </>\n                ) \n                : (\n                    <>\n                <ClockIcon className=\"flex-shrink-0 h-5 w-5 text-gray-300\" aria-hidden=\"true\" />\n                <span>Out of Stock</span>\n                    </>\n                )}\n            </p>\n            </div>\n        </li>\n    )\n}\nexport default CartItem","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\product\\Stars.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\orders.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\payment.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\coupons.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\actions\\shipping.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\components\\checkout\\ShippingForm.js",["404","405","406","407"],"import { QuestionMarkCircleIcon, SortAscendingIcon, UsersIcon } from '@heroicons/react/solid'\nimport { TicketIcon } from '@heroicons/react/outline'\nimport { Fragment } from 'react'\nconst ShippingForm = ({\n    full_name,\n    address_line_1,\n    address_line_2,\n    city,\n    state_province_region,\n    postal_zip_code,\n    telephone_number,\n    countries,\n    onChange,\n    buy,\n    user,\n    renderShipping,\n    total_amount,\n    total_compare_amount,\n    estimated_tax,\n    shipping_cost,\n    shipping_id,\n    shipping,\n    renderPaymentInfo,\n    apply_coupon,\n    coupon,\n    coupon_name,\n    total_after_coupon\n}) => {\n    return (\n        <section\n            aria-labelledby=\"summary-heading\"\n            className=\"mt-16 bg-gray-50 rounded-lg px-4 py-6 sm:p-6 lg:p-8 lg:mt-0 lg:col-span-5\"\n          >\n            <h2 id=\"summary-heading\" className=\"text-lg font-medium text-gray-900\">\n              Order summary\n            </h2>\n\n            <dl className=\"mt-6 space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                {renderShipping()}\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <form onSubmit={e => apply_coupon(e)}>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                        Discount Coupon\n                    </label>\n                    <div className=\"mt-1 flex rounded-md shadow-sm\">\n                        <div className=\"relative flex items-stretch flex-grow focus-within:z-10\">\n                        \n                        <input\n                            name='coupon_name'\n                            type='text'\n                            onChange={e => onChange(e)}\n                            value={coupon_name}\n                            className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-none rounded-l-md pl-4 sm:text-sm border-gray-300\"\n                            placeholder=\"Enter Code\"\n                        />\n                        </div>\n                        <button\n                        type=\"submit\"\n                        className=\"-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\"\n                        >\n                        <TicketIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        <span>Apply Coupon</span>\n                        </button>\n                        \n                    </div>\n                    \n                </form>\n              </div>\n\n              {\n                    coupon && \n                    coupon !== null &&\n                    coupon !== undefined ? (\n                        <div\n                            className='text-green-500'\n                        >\n                            Coupon: {coupon.name} is applied.\n                        </div>\n                    ) : (\n                        <Fragment></Fragment>\n                    )\n                }\n\n              <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n                <dt className=\"flex items-center text-sm text-gray-600\">\n                  <span>Shipping estimate</span>\n                  <a href=\"#\" className=\"ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500\">\n                    <span className=\"sr-only\">Learn more about how shipping is calculated</span>\n                    <QuestionMarkCircleIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                  </a>\n                </dt>\n                <dd className=\"text-sm font-medium text-gray-900\">{shipping && shipping_id !== 0 ? <>${shipping_cost}</>:<div className=\"text-red-500\">(Please select shipping option)</div>}</dd>\n              </div>\n\n              <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n                <dt className=\"flex text-sm text-gray-600\">\n                  <span>Tax estimate</span>\n                  <a href=\"#\" className=\"ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500\">\n                    <span className=\"sr-only\">Learn more about how tax is calculated</span>\n                    <QuestionMarkCircleIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                  </a>\n                </dt>\n                <dd className=\"text-sm font-medium text-gray-900\">${estimated_tax}</dd>\n              </div>\n              \n              <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n                <dt className=\"flex text-sm text-gray-600\">\n                  <span>Subtotal</span>\n                </dt>\n                <dd className=\"text-sm font-medium text-gray-900\">${total_compare_amount}</dd>\n              </div>\n\n              {\n                  coupon && \n                  coupon !== null && \n                  coupon !== undefined ?\n                  <>\n                    <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n                        <dt className=\"flex text-sm text-gray-600\">\n                        <span>Discounted Total</span>\n                        </dt>\n                        <dd className=\"text-sm font-medium text-gray-900\">${total_after_coupon}</dd>\n                    </div>\n                    <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n                        <dt className=\"text-base font-medium text-gray-900\">Order Total</dt>\n                        <dd className=\"text-base font-medium text-gray-900\">${total_amount}</dd>\n                    </div>\n                    </>\n                        :\n                    <div className=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n                        <dt className=\"text-base font-medium text-gray-900\">Order total</dt>\n                        <dd className=\"text-base font-medium text-gray-900\">${total_amount}</dd>\n                    </div>\n              }\n\n              \n\n            </dl>\n\n            <form onSubmit={e => buy(e)}>\n                <div className=\" px-4 py-5  mt-4 sm:px-6\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Shipping Address:</h3>\n                </div>\n                \n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                        Full name\n                    </label>\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                        <input\n                            type='text'\n                            name='full_name'\n                            placeholder={`${user.first_name} ${user.last_name}`}\n                            onChange={e => onChange(e)}\n                            value={full_name}\n                            required\n                            className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-300\"\n                        />\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                        Address Line 1*\n                    </label>\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                        <input\n                            type='text'\n                            name='address_line_1'\n                            // placeholder={`${profile.address_line_1}`}\n                            onChange={e => onChange(e)}\n                            value={address_line_1}\n                            required\n                            className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-300\"\n                        />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                        Address Line 2\n                    </label>\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                        <input\n                            type='text'\n                            name='address_line_2'\n                            // placeholder={`${profile.address_line_2}`}\n                            onChange={e => onChange(e)}\n                            value={address_line_2}\n                            className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-300\"\n                        />\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                        City*\n                    </label>\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                        <input\n                            type='text'\n                            name='city'\n                            // placeholder={`${profile.city}`}\n                            onChange={e => onChange(e)}\n                            value={city}\n                            required\n                            className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-300\"\n                        />\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                        State/Province/Region*\n                    </label>\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                        <input\n                            type='text'\n                            name='state_province_region'\n                            // placeholder={`${profile.state_province_region}`}\n                            onChange={e => onChange(e)}\n                            value={state_province_region}\n                            required\n                            className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-300\"\n                        />\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                        Postal Code*\n                    </label>\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                        <input\n                            type='text'\n                            name='postal_zip_code'\n                            // placeholder={`${profile.zipcode}`}\n                            onChange={e => onChange(e)}\n                            value={postal_zip_code}\n                            required\n                            className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-300\"\n                        />\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"\">\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                        Country/Region*\n                    </label>\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-gray-200 sm:pt-5\">\n              <div className=\" sm:col-span-2\">\n                <select\n                  id='country_region'\n                  name='country_region'\n                  onChange={e => onChange(e)}\n                  className=\"max-w-lg block focus:ring-indigo-500 focus:border-indigo-500 w-full shadow-sm sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"\n                >\n                  {\n                                countries && \n                                countries !== null &&\n                                countries !== undefined &&\n                                countries.map((country, index) => (\n                                    <option key={index} value={country.name}>\n                                        {country.name}\n                                    </option>\n                                ))\n                            }\n                </select>\n              </div>\n            </div>\n                </div>\n\n                <div className=\"sm:grid sm:grid-cols-3 mb-4 sm:gap-4 sm:items-start  sm:border-gray-200 sm:pt-5\">\n                    <label htmlFor=\"telephone_number\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                        Phone Number*\n                    </label>\n                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                        <div className=\"max-w-lg flex rounded-md shadow-sm\">\n                        <input\n                            type='tel'\n                            name='telephone_number'\n                            // placeholder={`${profile.phone}`}\n                            onChange={e => onChange(e)}\n                            value={telephone_number}\n                            required\n                            className=\"flex-1 block w-full focus:ring-indigo-500 focus:border-indigo-500 min-w-0 rounded-md sm:text-sm border-gray-300\"\n                        />\n                        </div>\n                    </div>\n                </div>\n\n                \n            {renderPaymentInfo()}\n\n            </form>\n          </section>\n\n    )\n}\n\nexport default ShippingForm","C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\products.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\shipping.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\cart.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\orders.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\categories.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\coupons.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\wishlist.js",[],"C:\\Users\\JuanD\\JuanD\\respaldo002\\cyg\\src\\redux\\reducers\\payment.js",[],{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","severity":1,"message":"413","line":15,"column":10,"nodeType":"414","messageId":"415","endLine":15,"endColumn":24},{"ruleId":"412","severity":1,"message":"416","line":3,"column":10,"nodeType":"414","messageId":"415","endLine":3,"endColumn":14},{"ruleId":"412","severity":1,"message":"416","line":3,"column":10,"nodeType":"414","messageId":"415","endLine":3,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":23,"column":8,"nodeType":"419","endLine":23,"endColumn":10,"suggestions":"420"},{"ruleId":"412","severity":1,"message":"421","line":1,"column":8,"nodeType":"414","messageId":"415","endLine":1,"endColumn":14},{"ruleId":"412","severity":1,"message":"422","line":24,"column":3,"nodeType":"414","messageId":"415","endLine":24,"endColumn":16},{"ruleId":"412","severity":1,"message":"423","line":28,"column":7,"nodeType":"414","messageId":"415","endLine":28,"endColumn":17},{"ruleId":"417","severity":1,"message":"424","line":63,"column":8,"nodeType":"419","endLine":63,"endColumn":10,"suggestions":"425"},{"ruleId":"417","severity":1,"message":"426","line":29,"column":8,"nodeType":"419","endLine":29,"endColumn":10,"suggestions":"427"},{"ruleId":"412","severity":1,"message":"428","line":2,"column":7,"nodeType":"414","messageId":"415","endLine":2,"endColumn":15},{"ruleId":"429","severity":1,"message":"430","line":20,"column":13,"nodeType":"431","endLine":20,"endColumn":113},{"ruleId":"429","severity":1,"message":"430","line":84,"column":17,"nodeType":"431","endLine":87,"endColumn":18},{"ruleId":"412","severity":1,"message":"432","line":3,"column":5,"nodeType":"414","messageId":"415","endLine":3,"endColumn":13},{"ruleId":"412","severity":1,"message":"433","line":5,"column":5,"nodeType":"414","messageId":"415","endLine":5,"endColumn":17},{"ruleId":"412","severity":1,"message":"434","line":6,"column":5,"nodeType":"414","messageId":"415","endLine":6,"endColumn":15},{"ruleId":"412","severity":1,"message":"435","line":7,"column":5,"nodeType":"414","messageId":"415","endLine":7,"endColumn":13},{"ruleId":"412","severity":1,"message":"436","line":8,"column":5,"nodeType":"414","messageId":"415","endLine":8,"endColumn":14},{"ruleId":"412","severity":1,"message":"437","line":9,"column":5,"nodeType":"414","messageId":"415","endLine":9,"endColumn":17},{"ruleId":"412","severity":1,"message":"438","line":10,"column":5,"nodeType":"414","messageId":"415","endLine":10,"endColumn":14},{"ruleId":"412","severity":1,"message":"439","line":11,"column":5,"nodeType":"414","messageId":"415","endLine":11,"endColumn":10},{"ruleId":"412","severity":1,"message":"422","line":12,"column":5,"nodeType":"414","messageId":"415","endLine":12,"endColumn":18},{"ruleId":"412","severity":1,"message":"440","line":14,"column":28,"nodeType":"414","messageId":"415","endLine":14,"endColumn":38},{"ruleId":"441","severity":1,"message":"442","line":119,"column":19,"nodeType":"431","endLine":119,"endColumn":62},{"ruleId":"441","severity":1,"message":"442","line":131,"column":19,"nodeType":"431","endLine":131,"endColumn":62},{"ruleId":"441","severity":1,"message":"442","line":145,"column":19,"nodeType":"431","endLine":145,"endColumn":62},{"ruleId":"441","severity":1,"message":"442","line":157,"column":19,"nodeType":"431","endLine":157,"endColumn":62},{"ruleId":"412","severity":1,"message":"443","line":55,"column":7,"nodeType":"414","messageId":"415","endLine":55,"endColumn":20},{"ruleId":"412","severity":1,"message":"444","line":60,"column":7,"nodeType":"414","messageId":"415","endLine":60,"endColumn":14},{"ruleId":"412","severity":1,"message":"445","line":67,"column":7,"nodeType":"414","messageId":"415","endLine":67,"endColumn":16},{"ruleId":"412","severity":1,"message":"446","line":73,"column":7,"nodeType":"414","messageId":"415","endLine":73,"endColumn":16},{"ruleId":"417","severity":1,"message":"447","line":118,"column":6,"nodeType":"419","endLine":118,"endColumn":8,"suggestions":"448"},{"ruleId":"429","severity":1,"message":"430","line":319,"column":21,"nodeType":"431","endLine":319,"endColumn":95},{"ruleId":"429","severity":1,"message":"430","line":329,"column":17,"nodeType":"431","endLine":329,"endColumn":108},{"ruleId":"429","severity":1,"message":"430","line":333,"column":17,"nodeType":"431","endLine":333,"endColumn":108},{"ruleId":"429","severity":1,"message":"430","line":337,"column":17,"nodeType":"431","endLine":337,"endColumn":108},{"ruleId":"429","severity":1,"message":"430","line":341,"column":17,"nodeType":"431","endLine":341,"endColumn":108},{"ruleId":"429","severity":1,"message":"430","line":345,"column":17,"nodeType":"431","endLine":345,"endColumn":108},{"ruleId":"429","severity":1,"message":"430","line":349,"column":17,"nodeType":"431","endLine":349,"endColumn":108},{"ruleId":"429","severity":1,"message":"430","line":360,"column":17,"nodeType":"431","endLine":363,"endColumn":16},{"ruleId":"429","severity":1,"message":"430","line":372,"column":19,"nodeType":"431","endLine":372,"endColumn":81},{"ruleId":"412","severity":1,"message":"449","line":3,"column":30,"nodeType":"414","messageId":"415","endLine":3,"endColumn":34},{"ruleId":"412","severity":1,"message":"450","line":5,"column":10,"nodeType":"414","messageId":"415","endLine":5,"endColumn":25},{"ruleId":"412","severity":1,"message":"451","line":5,"column":64,"nodeType":"414","messageId":"415","endLine":5,"endColumn":76},{"ruleId":"412","severity":1,"message":"416","line":6,"column":10,"nodeType":"414","messageId":"415","endLine":6,"endColumn":14},{"ruleId":"412","severity":1,"message":"452","line":12,"column":7,"nodeType":"414","messageId":"415","endLine":12,"endColumn":18},{"ruleId":"412","severity":1,"message":"453","line":19,"column":7,"nodeType":"414","messageId":"415","endLine":19,"endColumn":20},{"ruleId":"412","severity":1,"message":"454","line":26,"column":7,"nodeType":"414","messageId":"415","endLine":26,"endColumn":14},{"ruleId":"412","severity":1,"message":"455","line":64,"column":10,"nodeType":"414","messageId":"415","endLine":64,"endColumn":20},{"ruleId":"417","severity":1,"message":"456","line":96,"column":8,"nodeType":"419","endLine":96,"endColumn":10,"suggestions":"457"},{"ruleId":"441","severity":1,"message":"442","line":198,"column":19,"nodeType":"431","endLine":198,"endColumn":83},{"ruleId":"458","severity":1,"message":"459","line":236,"column":74,"nodeType":"460","messageId":"461","endLine":236,"endColumn":76},{"ruleId":"441","severity":1,"message":"442","line":410,"column":17,"nodeType":"431","endLine":410,"endColumn":119},{"ruleId":"458","severity":1,"message":"459","line":444,"column":74,"nodeType":"460","messageId":"461","endLine":444,"endColumn":76},{"ruleId":"458","severity":1,"message":"459","line":88,"column":31,"nodeType":"460","messageId":"461","endLine":88,"endColumn":33},{"ruleId":"417","severity":1,"message":"462","line":124,"column":8,"nodeType":"419","endLine":124,"endColumn":10,"suggestions":"463"},{"ruleId":"417","severity":1,"message":"464","line":128,"column":8,"nodeType":"419","endLine":128,"endColumn":19,"suggestions":"465"},{"ruleId":"417","severity":1,"message":"466","line":132,"column":8,"nodeType":"419","endLine":132,"endColumn":19,"suggestions":"467"},{"ruleId":"412","severity":1,"message":"468","line":157,"column":11,"nodeType":"414","messageId":"415","endLine":157,"endColumn":23},{"ruleId":"417","severity":1,"message":"469","line":45,"column":8,"nodeType":"419","endLine":45,"endColumn":16,"suggestions":"470"},{"ruleId":"429","severity":1,"message":"430","line":189,"column":19,"nodeType":"431","endLine":189,"endColumn":96},{"ruleId":"429","severity":1,"message":"430","line":200,"column":19,"nodeType":"431","endLine":200,"endColumn":96},{"ruleId":"412","severity":1,"message":"421","line":1,"column":8,"nodeType":"414","messageId":"415","endLine":1,"endColumn":14},{"ruleId":"412","severity":1,"message":"449","line":3,"column":30,"nodeType":"414","messageId":"415","endLine":3,"endColumn":34},{"ruleId":"412","severity":1,"message":"450","line":5,"column":10,"nodeType":"414","messageId":"415","endLine":5,"endColumn":25},{"ruleId":"412","severity":1,"message":"451","line":5,"column":64,"nodeType":"414","messageId":"415","endLine":5,"endColumn":76},{"ruleId":"412","severity":1,"message":"416","line":6,"column":10,"nodeType":"414","messageId":"415","endLine":6,"endColumn":14},{"ruleId":"412","severity":1,"message":"452","line":14,"column":7,"nodeType":"414","messageId":"415","endLine":14,"endColumn":18},{"ruleId":"412","severity":1,"message":"453","line":21,"column":7,"nodeType":"414","messageId":"415","endLine":21,"endColumn":20},{"ruleId":"412","severity":1,"message":"454","line":28,"column":7,"nodeType":"414","messageId":"415","endLine":28,"endColumn":14},{"ruleId":"412","severity":1,"message":"455","line":66,"column":10,"nodeType":"414","messageId":"415","endLine":66,"endColumn":20},{"ruleId":"417","severity":1,"message":"456","line":99,"column":8,"nodeType":"419","endLine":99,"endColumn":10,"suggestions":"471"},{"ruleId":"441","severity":1,"message":"442","line":201,"column":19,"nodeType":"431","endLine":201,"endColumn":83},{"ruleId":"458","severity":1,"message":"459","line":239,"column":74,"nodeType":"460","messageId":"461","endLine":239,"endColumn":76},{"ruleId":"441","severity":1,"message":"442","line":417,"column":17,"nodeType":"431","endLine":417,"endColumn":119},{"ruleId":"458","severity":1,"message":"459","line":451,"column":74,"nodeType":"460","messageId":"461","endLine":451,"endColumn":76},{"ruleId":"412","severity":1,"message":"472","line":66,"column":18,"nodeType":"414","messageId":"415","endLine":66,"endColumn":25},{"ruleId":"417","severity":1,"message":"473","line":128,"column":6,"nodeType":"419","endLine":128,"endColumn":8,"suggestions":"474"},{"ruleId":"417","severity":1,"message":"475","line":132,"column":6,"nodeType":"419","endLine":132,"endColumn":12,"suggestions":"476"},{"ruleId":"417","severity":1,"message":"477","line":139,"column":6,"nodeType":"419","endLine":139,"endColumn":27,"suggestions":"478"},{"ruleId":"417","severity":1,"message":"479","line":13,"column":8,"nodeType":"419","endLine":13,"endColumn":10,"suggestions":"480"},{"ruleId":"412","severity":1,"message":"421","line":1,"column":8,"nodeType":"414","messageId":"415","endLine":1,"endColumn":14},{"ruleId":"412","severity":1,"message":"481","line":18,"column":3,"nodeType":"414","messageId":"415","endLine":18,"endColumn":15},{"ruleId":"412","severity":1,"message":"433","line":19,"column":3,"nodeType":"414","messageId":"415","endLine":19,"endColumn":15},{"ruleId":"412","severity":1,"message":"434","line":20,"column":3,"nodeType":"414","messageId":"415","endLine":20,"endColumn":13},{"ruleId":"412","severity":1,"message":"435","line":21,"column":3,"nodeType":"414","messageId":"415","endLine":21,"endColumn":11},{"ruleId":"412","severity":1,"message":"436","line":22,"column":3,"nodeType":"414","messageId":"415","endLine":22,"endColumn":12},{"ruleId":"412","severity":1,"message":"438","line":24,"column":3,"nodeType":"414","messageId":"415","endLine":24,"endColumn":12},{"ruleId":"412","severity":1,"message":"422","line":26,"column":3,"nodeType":"414","messageId":"415","endLine":26,"endColumn":16},{"ruleId":"412","severity":1,"message":"482","line":30,"column":8,"nodeType":"414","messageId":"415","endLine":30,"endColumn":14},{"ruleId":"412","severity":1,"message":"428","line":38,"column":7,"nodeType":"414","messageId":"415","endLine":38,"endColumn":15},{"ruleId":"417","severity":1,"message":"483","line":80,"column":8,"nodeType":"419","endLine":80,"endColumn":24,"suggestions":"484"},{"ruleId":"412","severity":1,"message":"485","line":14,"column":10,"nodeType":"414","messageId":"415","endLine":14,"endColumn":15},{"ruleId":"412","severity":1,"message":"481","line":17,"column":3,"nodeType":"414","messageId":"415","endLine":17,"endColumn":15},{"ruleId":"412","severity":1,"message":"433","line":18,"column":3,"nodeType":"414","messageId":"415","endLine":18,"endColumn":15},{"ruleId":"412","severity":1,"message":"434","line":19,"column":3,"nodeType":"414","messageId":"415","endLine":19,"endColumn":13},{"ruleId":"412","severity":1,"message":"435","line":20,"column":3,"nodeType":"414","messageId":"415","endLine":20,"endColumn":11},{"ruleId":"412","severity":1,"message":"436","line":21,"column":3,"nodeType":"414","messageId":"415","endLine":21,"endColumn":12},{"ruleId":"412","severity":1,"message":"438","line":23,"column":3,"nodeType":"414","messageId":"415","endLine":23,"endColumn":12},{"ruleId":"412","severity":1,"message":"422","line":25,"column":3,"nodeType":"414","messageId":"415","endLine":25,"endColumn":16},{"ruleId":"417","severity":1,"message":"424","line":62,"column":8,"nodeType":"419","endLine":62,"endColumn":10,"suggestions":"486"},{"ruleId":"412","severity":1,"message":"421","line":1,"column":8,"nodeType":"414","messageId":"415","endLine":1,"endColumn":14},{"ruleId":"412","severity":1,"message":"422","line":24,"column":3,"nodeType":"414","messageId":"415","endLine":24,"endColumn":16},{"ruleId":"412","severity":1,"message":"423","line":29,"column":7,"nodeType":"414","messageId":"415","endLine":29,"endColumn":17},{"ruleId":"412","severity":1,"message":"428","line":43,"column":7,"nodeType":"414","messageId":"415","endLine":43,"endColumn":15},{"ruleId":"417","severity":1,"message":"424","line":84,"column":8,"nodeType":"419","endLine":84,"endColumn":10,"suggestions":"487"},{"ruleId":"458","severity":1,"message":"459","line":70,"column":23,"nodeType":"460","messageId":"461","endLine":70,"endColumn":25},{"ruleId":"458","severity":1,"message":"459","line":162,"column":27,"nodeType":"460","messageId":"461","endLine":162,"endColumn":29},{"ruleId":"458","severity":1,"message":"459","line":255,"column":41,"nodeType":"460","messageId":"461","endLine":255,"endColumn":43},{"ruleId":"458","severity":1,"message":"459","line":310,"column":32,"nodeType":"460","messageId":"461","endLine":310,"endColumn":34},{"ruleId":"458","severity":1,"message":"459","line":372,"column":28,"nodeType":"460","messageId":"461","endLine":372,"endColumn":30},{"ruleId":"458","severity":1,"message":"459","line":20,"column":31,"nodeType":"460","messageId":"461","endLine":20,"endColumn":33},{"ruleId":"412","severity":1,"message":"488","line":3,"column":10,"nodeType":"414","messageId":"415","endLine":3,"endColumn":20},{"ruleId":"417","severity":1,"message":"489","line":23,"column":8,"nodeType":"419","endLine":23,"endColumn":15,"suggestions":"490"},{"ruleId":"412","severity":1,"message":"488","line":3,"column":10,"nodeType":"414","messageId":"415","endLine":3,"endColumn":20},{"ruleId":"417","severity":1,"message":"489","line":23,"column":8,"nodeType":"419","endLine":23,"endColumn":15,"suggestions":"491"},{"ruleId":"412","severity":1,"message":"492","line":1,"column":34,"nodeType":"414","messageId":"415","endLine":1,"endColumn":51},{"ruleId":"412","severity":1,"message":"438","line":1,"column":53,"nodeType":"414","messageId":"415","endLine":1,"endColumn":62},{"ruleId":"429","severity":1,"message":"430","line":90,"column":19,"nodeType":"431","endLine":90,"endColumn":96},{"ruleId":"429","severity":1,"message":"430","line":101,"column":19,"nodeType":"431","endLine":101,"endColumn":96},"no-native-reassign",["493"],"no-negated-in-lhs",["494"],"no-unused-vars","'accountCreated' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'get_products_by_arrival' and 'get_products_by_sold'. Either include them or remove the dependency array. If 'get_products_by_arrival' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["495"],"'Layout' is defined but never used.","'PaperClipIcon' is defined but never used.","'navigation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'get_item_total', 'get_items', 'get_total', and 'list_orders'. Either include them or remove the dependency array. If 'get_items' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["496"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["497"],"'products' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'BellIcon' is defined but never used.","'ChartBarIcon' is defined but never used.","'FolderIcon' is defined but never used.","'HomeIcon' is defined but never used.","'InboxIcon' is defined but never used.","'MenuAlt2Icon' is defined but never used.","'UsersIcon' is defined but never used.","'XIcon' is defined but never used.","'SearchIcon' is defined but never used.","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","'callsToAction' is assigned a value but never used.","'company' is assigned a value but never used.","'resources' is assigned a value but never used.","'blogPosts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'get_categories'. Either include it or remove the dependency array. If 'get_categories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["498"],"'Menu' is defined but never used.","'ChevronDownIcon' is defined but never used.","'ViewGridIcon' is defined but never used.","'sortOptions' is assigned a value but never used.","'subCategories' is assigned a value but never used.","'filters' is assigned a value but never used.","'classNames' is defined but never used.","React Hook useEffect has missing dependencies: 'get_categories' and 'get_products'. Either include them or remove the dependency array. If 'get_categories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["499"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'get_product', 'get_related_products', 'get_wishlist_item_total', 'get_wishlist_items', and 'productId'. Either include them or remove the dependency array. If 'get_product' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["500"],"React Hook useEffect has a missing dependency: 'get_reviews'. Either include it or remove the dependency array. If 'get_reviews' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["501"],"React Hook useEffect has a missing dependency: 'get_review'. Either include it or remove the dependency array. If 'get_review' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["502"],"'deleteReview' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'get_item_total', 'get_items', and 'get_total'. Either include them or remove the dependency array. If 'get_items' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["503"],["504"],"'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'get_shipping_options'. Either include it or remove the dependency array. If 'get_shipping_options' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["505"],"React Hook useEffect has a missing dependency: 'get_client_token'. Either include it or remove the dependency array. If 'get_client_token' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["506"],"React Hook useEffect has a missing dependency: 'get_payment_total'. Either include it or remove the dependency array. If 'get_payment_total' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["507"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array. If 'reset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["508"],"'CalendarIcon' is defined but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'get_order_detail'. Either include it or remove the dependency array. If 'get_order_detail' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["509"],"'toast' is defined but never used.",["510"],["511"],"'UploadIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["512"],["513"],"'SortAscendingIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"522","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"516","fix":"543"},{"desc":"516","fix":"544"},{"desc":"545","fix":"546"},{"desc":"545","fix":"547"},"Update the dependencies array to be: [get_products_by_arrival, get_products_by_sold]",{"range":"548","text":"549"},"Update the dependencies array to be: [get_item_total, get_items, get_total, list_orders]",{"range":"550","text":"551"},"Update the dependencies array to be: [props]",{"range":"552","text":"553"},"Update the dependencies array to be: [get_categories]",{"range":"554","text":"555"},"Update the dependencies array to be: [get_categories, get_products]",{"range":"556","text":"557"},"Update the dependencies array to be: [get_product, get_related_products, get_wishlist_item_total, get_wishlist_items, productId]",{"range":"558","text":"559"},"Update the dependencies array to be: [get_reviews, productId]",{"range":"560","text":"561"},"Update the dependencies array to be: [get_review, productId]",{"range":"562","text":"563"},"Update the dependencies array to be: [get_item_total, get_items, get_total, render]",{"range":"564","text":"565"},{"range":"566","text":"557"},"Update the dependencies array to be: [get_shipping_options]",{"range":"567","text":"568"},"Update the dependencies array to be: [get_client_token, user]",{"range":"569","text":"570"},"Update the dependencies array to be: [shipping_id, coupon, get_payment_total]",{"range":"571","text":"572"},"Update the dependencies array to be: [reset]",{"range":"573","text":"574"},"Update the dependencies array to be: [get_order_detail, transaction_id]",{"range":"575","text":"576"},{"range":"577","text":"551"},{"range":"578","text":"551"},"Update the dependencies array to be: [count, formData]",{"range":"579","text":"580"},{"range":"581","text":"580"},[632,634],"[get_products_by_arrival, get_products_by_sold]",[1709,1711],"[get_item_total, get_items, get_total, list_orders]",[778,780],"[props]",[3607,3609],"[get_categories]",[3069,3071],"[get_categories, get_products]",[3142,3144],"[get_product, get_related_products, get_wishlist_item_total, get_wishlist_items, productId]",[3208,3219],"[get_reviews, productId]",[3283,3294],"[get_review, productId]",[1050,1058],"[get_item_total, get_items, get_total, render]",[3221,3223],[3181,3183],"[get_shipping_options]",[3237,3243],"[get_client_token, user]",[3446,3467],"[shipping_id, coupon, get_payment_total]",[311,313],"[reset]",[2179,2195],"[get_order_detail, transaction_id]",[1540,1542],[2441,2443],[555,562],"[count, formData]",[542,549]]