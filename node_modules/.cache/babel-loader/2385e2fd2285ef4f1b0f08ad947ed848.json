{"ast":null,"code":"import { GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL, GET_REVIEW_SUCCESS, GET_REVIEW_FAIL, CREATE_REVIEW_SUCCESS, CREATE_REVIEW_FAIL, UPDATE_REVIEW_SUCCESS, UPDATE_REVIEW_FAIL, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_FAIL, FILTER_REVIEWS_SUCCESS, FILTER_REVIEWS_FAIL } from '../actions/types';\nconst intitialState = {\n  review: null,\n  reviews: null\n};\nexport default function Reviews() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_REVIEWS_SUCCESS:\n      return { ...state,\n        reviews: payload.reviews\n      };\n\n    case GET_REVIEWS_FAIL:\n      return { ...state,\n        reviews: []\n      };\n\n    case GET_REVIEW_SUCCESS:\n      return { ...state,\n        review: payload.review\n      };\n\n    case GET_REVIEW_FAIL:\n      return { ...state,\n        review: {}\n      };\n\n    case CREATE_REVIEW_SUCCESS:\n      return { ...state,\n        review: payload.review,\n        reviews: payload.reviews\n      };\n\n    case CREATE_REVIEW_FAIL:\n      return { ...state,\n        review: {}\n      };\n\n    case UPDATE_REVIEW_SUCCESS:\n      return { ...state,\n        review: payload.review,\n        reviews: payload.reviews\n      };\n\n    case UPDATE_REVIEW_FAIL:\n      return { ...state\n      };\n\n    case DELETE_REVIEW_SUCCESS:\n      return { ...state,\n        review: {},\n        reviews: payload.reviews\n      };\n\n    case DELETE_REVIEW_FAIL:\n      return { ...state\n      };\n\n    case FILTER_REVIEWS_SUCCESS:\n      return { ...state,\n        reviews: payload.reviews\n      };\n\n    case FILTER_REVIEWS_FAIL:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}\n_c = Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["C:/Users/JuanD/JuanD/respaldo002/cyg/src/redux/reducers/reviews.js"],"names":["GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","GET_REVIEW_SUCCESS","GET_REVIEW_FAIL","CREATE_REVIEW_SUCCESS","CREATE_REVIEW_FAIL","UPDATE_REVIEW_SUCCESS","UPDATE_REVIEW_FAIL","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","FILTER_REVIEWS_SUCCESS","FILTER_REVIEWS_FAIL","intitialState","review","reviews","Reviews","state","action","type","payload"],"mappings":"AAAA,SACIA,mBADJ,EAEIC,gBAFJ,EAGIC,kBAHJ,EAIIC,eAJJ,EAKIC,qBALJ,EAMIC,kBANJ,EAOIC,qBAPJ,EAQIC,kBARJ,EASIC,qBATJ,EAUIC,kBAVJ,EAWIC,sBAXJ,EAYIC,mBAZJ,QAaO,kBAbP;AAeA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,OAAO,EAAE;AAFS,CAAtB;AAKA,eAAe,SAASC,OAAT,GAAgD;AAAA,MAA/BC,KAA+B,uEAAvBJ,aAAuB;AAAA,MAARK,MAAQ;AAC3D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAOC,IAAP;AACI,SAAKlB,mBAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHF,QAAAA,OAAO,EAAEK,OAAO,CAACL;AAFd,OAAP;;AAIJ,SAAKb,gBAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHF,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKZ,kBAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHH,QAAAA,MAAM,EAAEM,OAAO,CAACN;AAFb,OAAP;;AAIJ,SAAKV,eAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHH,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAIJ,SAAKT,qBAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHH,QAAAA,MAAM,EAAEM,OAAO,CAACN,MAFb;AAGHC,QAAAA,OAAO,EAAEK,OAAO,CAACL;AAHd,OAAP;;AAKJ,SAAKT,kBAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAIJ,SAAKP,qBAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,MAAM,EAAEM,OAAO,CAACN,MAFb;AAGHC,QAAAA,OAAO,EAAEK,OAAO,CAACL;AAHd,OAAP;;AAKJ,SAAKP,kBAAL;AACI,aAAO,EACH,GAAGS;AADA,OAAP;;AAGJ,SAAKR,qBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,MAAM,EAAE,EAFL;AAGHC,QAAAA,OAAO,EAAEK,OAAO,CAACL;AAHd,OAAP;;AAKJ,SAAKL,kBAAL;AACI,aAAO,EACH,GAAGO;AADA,OAAP;;AAGJ,SAAKN,sBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,OAAO,EAAEK,OAAO,CAACL;AAFd,OAAP;;AAIJ,SAAKH,mBAAL;AACI,aAAO,EACH,GAAGK;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AA9DR;AAkEH;KArEuBD,O","sourcesContent":["import {\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    GET_REVIEW_SUCCESS,\n    GET_REVIEW_FAIL,\n    CREATE_REVIEW_SUCCESS,\n    CREATE_REVIEW_FAIL,\n    UPDATE_REVIEW_SUCCESS,\n    UPDATE_REVIEW_FAIL,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_FAIL,\n    FILTER_REVIEWS_SUCCESS,\n    FILTER_REVIEWS_FAIL,\n} from '../actions/types';\n\nconst intitialState = {\n    review: null,\n    reviews: null\n};\n\nexport default function Reviews(state = intitialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case GET_REVIEWS_SUCCESS:\n            return {\n                ...state,\n                reviews: payload.reviews\n            }\n        case GET_REVIEWS_FAIL:\n            return {\n                ...state,\n                reviews: []\n            }\n        case GET_REVIEW_SUCCESS:\n            return {\n                ...state,\n                review: payload.review\n            }\n        case GET_REVIEW_FAIL:\n            return {\n                ...state,\n                review: {}\n            }\n        case CREATE_REVIEW_SUCCESS:\n            return {\n                ...state,\n                review: payload.review,\n                reviews: payload.reviews\n            }\n        case CREATE_REVIEW_FAIL:\n            return {\n                ...state,\n                review: {}\n            }\n        case UPDATE_REVIEW_SUCCESS:\n            return {\n                ...state,\n                review: payload.review,\n                reviews: payload.reviews\n            }\n        case UPDATE_REVIEW_FAIL:\n            return {\n                ...state\n            }\n        case DELETE_REVIEW_SUCCESS:\n            return {\n                ...state,\n                review: {},\n                reviews: payload.reviews\n            }\n        case DELETE_REVIEW_FAIL:\n            return {\n                ...state\n            }\n        case FILTER_REVIEWS_SUCCESS:\n            return {\n                ...state,\n                reviews: payload.reviews\n            }\n        case FILTER_REVIEWS_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}